// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.2
// source: dota_gcmessages_client_bingo.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EBingoAuditAction int32

const (
	EBingoAuditAction_k_eBingoAuditAction_Invalid                   EBingoAuditAction = 0
	EBingoAuditAction_k_eBingoAuditAction_DevModifyTokens           EBingoAuditAction = 1
	EBingoAuditAction_k_eBingoAuditAction_DevClearInventory         EBingoAuditAction = 2
	EBingoAuditAction_k_eBingoAuditAction_DevRerollCard             EBingoAuditAction = 3
	EBingoAuditAction_k_eBingoAuditAction_ShuffleCard               EBingoAuditAction = 4
	EBingoAuditAction_k_eBingoAuditAction_RerollSquare              EBingoAuditAction = 5
	EBingoAuditAction_k_eBingoAuditAction_UpgradeSquare             EBingoAuditAction = 6
	EBingoAuditAction_k_eBingoAuditAction_ClaimRow                  EBingoAuditAction = 7
	EBingoAuditAction_k_eBingoAuditAction_EventActionTokenGrant     EBingoAuditAction = 8
	EBingoAuditAction_k_eBingoAuditAction_SupportGrantTokens        EBingoAuditAction = 9
	EBingoAuditAction_k_eBingoAuditAction_SupportStatThresholdFixup EBingoAuditAction = 10
)

// Enum value maps for EBingoAuditAction.
var (
	EBingoAuditAction_name = map[int32]string{
		0:  "k_eBingoAuditAction_Invalid",
		1:  "k_eBingoAuditAction_DevModifyTokens",
		2:  "k_eBingoAuditAction_DevClearInventory",
		3:  "k_eBingoAuditAction_DevRerollCard",
		4:  "k_eBingoAuditAction_ShuffleCard",
		5:  "k_eBingoAuditAction_RerollSquare",
		6:  "k_eBingoAuditAction_UpgradeSquare",
		7:  "k_eBingoAuditAction_ClaimRow",
		8:  "k_eBingoAuditAction_EventActionTokenGrant",
		9:  "k_eBingoAuditAction_SupportGrantTokens",
		10: "k_eBingoAuditAction_SupportStatThresholdFixup",
	}
	EBingoAuditAction_value = map[string]int32{
		"k_eBingoAuditAction_Invalid":                   0,
		"k_eBingoAuditAction_DevModifyTokens":           1,
		"k_eBingoAuditAction_DevClearInventory":         2,
		"k_eBingoAuditAction_DevRerollCard":             3,
		"k_eBingoAuditAction_ShuffleCard":               4,
		"k_eBingoAuditAction_RerollSquare":              5,
		"k_eBingoAuditAction_UpgradeSquare":             6,
		"k_eBingoAuditAction_ClaimRow":                  7,
		"k_eBingoAuditAction_EventActionTokenGrant":     8,
		"k_eBingoAuditAction_SupportGrantTokens":        9,
		"k_eBingoAuditAction_SupportStatThresholdFixup": 10,
	}
)

func (x EBingoAuditAction) Enum() *EBingoAuditAction {
	p := new(EBingoAuditAction)
	*p = x
	return p
}

func (x EBingoAuditAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBingoAuditAction) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[0].Descriptor()
}

func (EBingoAuditAction) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[0]
}

func (x EBingoAuditAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBingoAuditAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBingoAuditAction(num)
	return nil
}

// Deprecated: Use EBingoAuditAction.Descriptor instead.
func (EBingoAuditAction) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{0}
}

type CMsgClientToGCBingoGetUserDataResponse_EResponse int32

const (
	CMsgClientToGCBingoGetUserDataResponse_k_eInternalError CMsgClientToGCBingoGetUserDataResponse_EResponse = 0
	CMsgClientToGCBingoGetUserDataResponse_k_eSuccess       CMsgClientToGCBingoGetUserDataResponse_EResponse = 1
	CMsgClientToGCBingoGetUserDataResponse_k_eTooBusy       CMsgClientToGCBingoGetUserDataResponse_EResponse = 2
	CMsgClientToGCBingoGetUserDataResponse_k_eDisabled      CMsgClientToGCBingoGetUserDataResponse_EResponse = 3
	CMsgClientToGCBingoGetUserDataResponse_k_eTimeout       CMsgClientToGCBingoGetUserDataResponse_EResponse = 4
)

// Enum value maps for CMsgClientToGCBingoGetUserDataResponse_EResponse.
var (
	CMsgClientToGCBingoGetUserDataResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
	}
	CMsgClientToGCBingoGetUserDataResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
	}
)

func (x CMsgClientToGCBingoGetUserDataResponse_EResponse) Enum() *CMsgClientToGCBingoGetUserDataResponse_EResponse {
	p := new(CMsgClientToGCBingoGetUserDataResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCBingoGetUserDataResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBingoGetUserDataResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[1].Descriptor()
}

func (CMsgClientToGCBingoGetUserDataResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[1]
}

func (x CMsgClientToGCBingoGetUserDataResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBingoGetUserDataResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBingoGetUserDataResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBingoGetUserDataResponse_EResponse.Descriptor instead.
func (CMsgClientToGCBingoGetUserDataResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{5, 0}
}

type CMsgClientToGCBingoGetStatsDataResponse_EResponse int32

const (
	CMsgClientToGCBingoGetStatsDataResponse_k_eInternalError CMsgClientToGCBingoGetStatsDataResponse_EResponse = 0
	CMsgClientToGCBingoGetStatsDataResponse_k_eSuccess       CMsgClientToGCBingoGetStatsDataResponse_EResponse = 1
	CMsgClientToGCBingoGetStatsDataResponse_k_eTooBusy       CMsgClientToGCBingoGetStatsDataResponse_EResponse = 2
	CMsgClientToGCBingoGetStatsDataResponse_k_eDisabled      CMsgClientToGCBingoGetStatsDataResponse_EResponse = 3
	CMsgClientToGCBingoGetStatsDataResponse_k_eTimeout       CMsgClientToGCBingoGetStatsDataResponse_EResponse = 4
)

// Enum value maps for CMsgClientToGCBingoGetStatsDataResponse_EResponse.
var (
	CMsgClientToGCBingoGetStatsDataResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
	}
	CMsgClientToGCBingoGetStatsDataResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
	}
)

func (x CMsgClientToGCBingoGetStatsDataResponse_EResponse) Enum() *CMsgClientToGCBingoGetStatsDataResponse_EResponse {
	p := new(CMsgClientToGCBingoGetStatsDataResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCBingoGetStatsDataResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBingoGetStatsDataResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[2].Descriptor()
}

func (CMsgClientToGCBingoGetStatsDataResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[2]
}

func (x CMsgClientToGCBingoGetStatsDataResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBingoGetStatsDataResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBingoGetStatsDataResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBingoGetStatsDataResponse_EResponse.Descriptor instead.
func (CMsgClientToGCBingoGetStatsDataResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{9, 0}
}

type CMsgClientToGCBingoClaimRowResponse_EResponse int32

const (
	CMsgClientToGCBingoClaimRowResponse_k_eInternalError CMsgClientToGCBingoClaimRowResponse_EResponse = 0
	CMsgClientToGCBingoClaimRowResponse_k_eSuccess       CMsgClientToGCBingoClaimRowResponse_EResponse = 1
	CMsgClientToGCBingoClaimRowResponse_k_eTooBusy       CMsgClientToGCBingoClaimRowResponse_EResponse = 2
	CMsgClientToGCBingoClaimRowResponse_k_eDisabled      CMsgClientToGCBingoClaimRowResponse_EResponse = 3
	CMsgClientToGCBingoClaimRowResponse_k_eTimeout       CMsgClientToGCBingoClaimRowResponse_EResponse = 4
	CMsgClientToGCBingoClaimRowResponse_k_eInvalidRow    CMsgClientToGCBingoClaimRowResponse_EResponse = 5
	CMsgClientToGCBingoClaimRowResponse_k_eExpiredCard   CMsgClientToGCBingoClaimRowResponse_EResponse = 6
)

// Enum value maps for CMsgClientToGCBingoClaimRowResponse_EResponse.
var (
	CMsgClientToGCBingoClaimRowResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eInvalidRow",
		6: "k_eExpiredCard",
	}
	CMsgClientToGCBingoClaimRowResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eInvalidRow":    5,
		"k_eExpiredCard":   6,
	}
)

func (x CMsgClientToGCBingoClaimRowResponse_EResponse) Enum() *CMsgClientToGCBingoClaimRowResponse_EResponse {
	p := new(CMsgClientToGCBingoClaimRowResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCBingoClaimRowResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBingoClaimRowResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[3].Descriptor()
}

func (CMsgClientToGCBingoClaimRowResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[3]
}

func (x CMsgClientToGCBingoClaimRowResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBingoClaimRowResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBingoClaimRowResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBingoClaimRowResponse_EResponse.Descriptor instead.
func (CMsgClientToGCBingoClaimRowResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{12, 0}
}

type CMsgClientToGCBingoShuffleCardResponse_EResponse int32

const (
	CMsgClientToGCBingoShuffleCardResponse_k_eInternalError      CMsgClientToGCBingoShuffleCardResponse_EResponse = 0
	CMsgClientToGCBingoShuffleCardResponse_k_eSuccess            CMsgClientToGCBingoShuffleCardResponse_EResponse = 1
	CMsgClientToGCBingoShuffleCardResponse_k_eTooBusy            CMsgClientToGCBingoShuffleCardResponse_EResponse = 2
	CMsgClientToGCBingoShuffleCardResponse_k_eDisabled           CMsgClientToGCBingoShuffleCardResponse_EResponse = 3
	CMsgClientToGCBingoShuffleCardResponse_k_eTimeout            CMsgClientToGCBingoShuffleCardResponse_EResponse = 4
	CMsgClientToGCBingoShuffleCardResponse_k_eExpiredCard        CMsgClientToGCBingoShuffleCardResponse_EResponse = 6
	CMsgClientToGCBingoShuffleCardResponse_k_eNotAllowed         CMsgClientToGCBingoShuffleCardResponse_EResponse = 7
	CMsgClientToGCBingoShuffleCardResponse_k_eInsufficientTokens CMsgClientToGCBingoShuffleCardResponse_EResponse = 8
)

// Enum value maps for CMsgClientToGCBingoShuffleCardResponse_EResponse.
var (
	CMsgClientToGCBingoShuffleCardResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		6: "k_eExpiredCard",
		7: "k_eNotAllowed",
		8: "k_eInsufficientTokens",
	}
	CMsgClientToGCBingoShuffleCardResponse_EResponse_value = map[string]int32{
		"k_eInternalError":      0,
		"k_eSuccess":            1,
		"k_eTooBusy":            2,
		"k_eDisabled":           3,
		"k_eTimeout":            4,
		"k_eExpiredCard":        6,
		"k_eNotAllowed":         7,
		"k_eInsufficientTokens": 8,
	}
)

func (x CMsgClientToGCBingoShuffleCardResponse_EResponse) Enum() *CMsgClientToGCBingoShuffleCardResponse_EResponse {
	p := new(CMsgClientToGCBingoShuffleCardResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCBingoShuffleCardResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBingoShuffleCardResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[4].Descriptor()
}

func (CMsgClientToGCBingoShuffleCardResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[4]
}

func (x CMsgClientToGCBingoShuffleCardResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBingoShuffleCardResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBingoShuffleCardResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBingoShuffleCardResponse_EResponse.Descriptor instead.
func (CMsgClientToGCBingoShuffleCardResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{14, 0}
}

type CMsgClientToGCBingoModifySquare_EModifyAction int32

const (
	CMsgClientToGCBingoModifySquare_k_eRerollStat CMsgClientToGCBingoModifySquare_EModifyAction = 0
	CMsgClientToGCBingoModifySquare_k_eUpgrade    CMsgClientToGCBingoModifySquare_EModifyAction = 1
)

// Enum value maps for CMsgClientToGCBingoModifySquare_EModifyAction.
var (
	CMsgClientToGCBingoModifySquare_EModifyAction_name = map[int32]string{
		0: "k_eRerollStat",
		1: "k_eUpgrade",
	}
	CMsgClientToGCBingoModifySquare_EModifyAction_value = map[string]int32{
		"k_eRerollStat": 0,
		"k_eUpgrade":    1,
	}
)

func (x CMsgClientToGCBingoModifySquare_EModifyAction) Enum() *CMsgClientToGCBingoModifySquare_EModifyAction {
	p := new(CMsgClientToGCBingoModifySquare_EModifyAction)
	*p = x
	return p
}

func (x CMsgClientToGCBingoModifySquare_EModifyAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBingoModifySquare_EModifyAction) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[5].Descriptor()
}

func (CMsgClientToGCBingoModifySquare_EModifyAction) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[5]
}

func (x CMsgClientToGCBingoModifySquare_EModifyAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBingoModifySquare_EModifyAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBingoModifySquare_EModifyAction(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBingoModifySquare_EModifyAction.Descriptor instead.
func (CMsgClientToGCBingoModifySquare_EModifyAction) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{15, 0}
}

type CMsgClientToGCBingoModifySquareResponse_EResponse int32

const (
	CMsgClientToGCBingoModifySquareResponse_k_eInternalError      CMsgClientToGCBingoModifySquareResponse_EResponse = 0
	CMsgClientToGCBingoModifySquareResponse_k_eSuccess            CMsgClientToGCBingoModifySquareResponse_EResponse = 1
	CMsgClientToGCBingoModifySquareResponse_k_eTooBusy            CMsgClientToGCBingoModifySquareResponse_EResponse = 2
	CMsgClientToGCBingoModifySquareResponse_k_eDisabled           CMsgClientToGCBingoModifySquareResponse_EResponse = 3
	CMsgClientToGCBingoModifySquareResponse_k_eTimeout            CMsgClientToGCBingoModifySquareResponse_EResponse = 4
	CMsgClientToGCBingoModifySquareResponse_k_eExpiredCard        CMsgClientToGCBingoModifySquareResponse_EResponse = 6
	CMsgClientToGCBingoModifySquareResponse_k_eNotAllowed         CMsgClientToGCBingoModifySquareResponse_EResponse = 7
	CMsgClientToGCBingoModifySquareResponse_k_eInsufficientTokens CMsgClientToGCBingoModifySquareResponse_EResponse = 8
	CMsgClientToGCBingoModifySquareResponse_k_eCantUpgrade        CMsgClientToGCBingoModifySquareResponse_EResponse = 9
	CMsgClientToGCBingoModifySquareResponse_k_eCantReroll         CMsgClientToGCBingoModifySquareResponse_EResponse = 10
	CMsgClientToGCBingoModifySquareResponse_k_eInvalidSquare      CMsgClientToGCBingoModifySquareResponse_EResponse = 11
)

// Enum value maps for CMsgClientToGCBingoModifySquareResponse_EResponse.
var (
	CMsgClientToGCBingoModifySquareResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eTooBusy",
		3:  "k_eDisabled",
		4:  "k_eTimeout",
		6:  "k_eExpiredCard",
		7:  "k_eNotAllowed",
		8:  "k_eInsufficientTokens",
		9:  "k_eCantUpgrade",
		10: "k_eCantReroll",
		11: "k_eInvalidSquare",
	}
	CMsgClientToGCBingoModifySquareResponse_EResponse_value = map[string]int32{
		"k_eInternalError":      0,
		"k_eSuccess":            1,
		"k_eTooBusy":            2,
		"k_eDisabled":           3,
		"k_eTimeout":            4,
		"k_eExpiredCard":        6,
		"k_eNotAllowed":         7,
		"k_eInsufficientTokens": 8,
		"k_eCantUpgrade":        9,
		"k_eCantReroll":         10,
		"k_eInvalidSquare":      11,
	}
)

func (x CMsgClientToGCBingoModifySquareResponse_EResponse) Enum() *CMsgClientToGCBingoModifySquareResponse_EResponse {
	p := new(CMsgClientToGCBingoModifySquareResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCBingoModifySquareResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBingoModifySquareResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[6].Descriptor()
}

func (CMsgClientToGCBingoModifySquareResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[6]
}

func (x CMsgClientToGCBingoModifySquareResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBingoModifySquareResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBingoModifySquareResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBingoModifySquareResponse_EResponse.Descriptor instead.
func (CMsgClientToGCBingoModifySquareResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{16, 0}
}

type CMsgClientToGCBingoDevRerollCardResponse_EResponse int32

const (
	CMsgClientToGCBingoDevRerollCardResponse_k_eInternalError CMsgClientToGCBingoDevRerollCardResponse_EResponse = 0
	CMsgClientToGCBingoDevRerollCardResponse_k_eSuccess       CMsgClientToGCBingoDevRerollCardResponse_EResponse = 1
	CMsgClientToGCBingoDevRerollCardResponse_k_eTooBusy       CMsgClientToGCBingoDevRerollCardResponse_EResponse = 2
	CMsgClientToGCBingoDevRerollCardResponse_k_eDisabled      CMsgClientToGCBingoDevRerollCardResponse_EResponse = 3
	CMsgClientToGCBingoDevRerollCardResponse_k_eTimeout       CMsgClientToGCBingoDevRerollCardResponse_EResponse = 4
	CMsgClientToGCBingoDevRerollCardResponse_k_eExpiredCard   CMsgClientToGCBingoDevRerollCardResponse_EResponse = 6
	CMsgClientToGCBingoDevRerollCardResponse_k_eNotAllowed    CMsgClientToGCBingoDevRerollCardResponse_EResponse = 7
)

// Enum value maps for CMsgClientToGCBingoDevRerollCardResponse_EResponse.
var (
	CMsgClientToGCBingoDevRerollCardResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		6: "k_eExpiredCard",
		7: "k_eNotAllowed",
	}
	CMsgClientToGCBingoDevRerollCardResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eExpiredCard":   6,
		"k_eNotAllowed":    7,
	}
)

func (x CMsgClientToGCBingoDevRerollCardResponse_EResponse) Enum() *CMsgClientToGCBingoDevRerollCardResponse_EResponse {
	p := new(CMsgClientToGCBingoDevRerollCardResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCBingoDevRerollCardResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBingoDevRerollCardResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[7].Descriptor()
}

func (CMsgClientToGCBingoDevRerollCardResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[7]
}

func (x CMsgClientToGCBingoDevRerollCardResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBingoDevRerollCardResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBingoDevRerollCardResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBingoDevRerollCardResponse_EResponse.Descriptor instead.
func (CMsgClientToGCBingoDevRerollCardResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{18, 0}
}

type CMsgClientToGCBingoDevAddTokensResponse_EResponse int32

const (
	CMsgClientToGCBingoDevAddTokensResponse_k_eInternalError CMsgClientToGCBingoDevAddTokensResponse_EResponse = 0
	CMsgClientToGCBingoDevAddTokensResponse_k_eSuccess       CMsgClientToGCBingoDevAddTokensResponse_EResponse = 1
	CMsgClientToGCBingoDevAddTokensResponse_k_eTooBusy       CMsgClientToGCBingoDevAddTokensResponse_EResponse = 2
	CMsgClientToGCBingoDevAddTokensResponse_k_eDisabled      CMsgClientToGCBingoDevAddTokensResponse_EResponse = 3
	CMsgClientToGCBingoDevAddTokensResponse_k_eTimeout       CMsgClientToGCBingoDevAddTokensResponse_EResponse = 4
	CMsgClientToGCBingoDevAddTokensResponse_k_eExpiredCard   CMsgClientToGCBingoDevAddTokensResponse_EResponse = 6
	CMsgClientToGCBingoDevAddTokensResponse_k_eNotAllowed    CMsgClientToGCBingoDevAddTokensResponse_EResponse = 7
)

// Enum value maps for CMsgClientToGCBingoDevAddTokensResponse_EResponse.
var (
	CMsgClientToGCBingoDevAddTokensResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		6: "k_eExpiredCard",
		7: "k_eNotAllowed",
	}
	CMsgClientToGCBingoDevAddTokensResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eExpiredCard":   6,
		"k_eNotAllowed":    7,
	}
)

func (x CMsgClientToGCBingoDevAddTokensResponse_EResponse) Enum() *CMsgClientToGCBingoDevAddTokensResponse_EResponse {
	p := new(CMsgClientToGCBingoDevAddTokensResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCBingoDevAddTokensResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBingoDevAddTokensResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[8].Descriptor()
}

func (CMsgClientToGCBingoDevAddTokensResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[8]
}

func (x CMsgClientToGCBingoDevAddTokensResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBingoDevAddTokensResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBingoDevAddTokensResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBingoDevAddTokensResponse_EResponse.Descriptor instead.
func (CMsgClientToGCBingoDevAddTokensResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{20, 0}
}

type CMsgClientToGCBingoDevClearInventoryResponse_EResponse int32

const (
	CMsgClientToGCBingoDevClearInventoryResponse_k_eInternalError CMsgClientToGCBingoDevClearInventoryResponse_EResponse = 0
	CMsgClientToGCBingoDevClearInventoryResponse_k_eSuccess       CMsgClientToGCBingoDevClearInventoryResponse_EResponse = 1
	CMsgClientToGCBingoDevClearInventoryResponse_k_eTooBusy       CMsgClientToGCBingoDevClearInventoryResponse_EResponse = 2
	CMsgClientToGCBingoDevClearInventoryResponse_k_eDisabled      CMsgClientToGCBingoDevClearInventoryResponse_EResponse = 3
	CMsgClientToGCBingoDevClearInventoryResponse_k_eTimeout       CMsgClientToGCBingoDevClearInventoryResponse_EResponse = 4
	CMsgClientToGCBingoDevClearInventoryResponse_k_eExpiredCard   CMsgClientToGCBingoDevClearInventoryResponse_EResponse = 6
	CMsgClientToGCBingoDevClearInventoryResponse_k_eNotAllowed    CMsgClientToGCBingoDevClearInventoryResponse_EResponse = 7
)

// Enum value maps for CMsgClientToGCBingoDevClearInventoryResponse_EResponse.
var (
	CMsgClientToGCBingoDevClearInventoryResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		6: "k_eExpiredCard",
		7: "k_eNotAllowed",
	}
	CMsgClientToGCBingoDevClearInventoryResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eExpiredCard":   6,
		"k_eNotAllowed":    7,
	}
)

func (x CMsgClientToGCBingoDevClearInventoryResponse_EResponse) Enum() *CMsgClientToGCBingoDevClearInventoryResponse_EResponse {
	p := new(CMsgClientToGCBingoDevClearInventoryResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCBingoDevClearInventoryResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBingoDevClearInventoryResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_bingo_proto_enumTypes[9].Descriptor()
}

func (CMsgClientToGCBingoDevClearInventoryResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_bingo_proto_enumTypes[9]
}

func (x CMsgClientToGCBingoDevClearInventoryResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBingoDevClearInventoryResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBingoDevClearInventoryResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBingoDevClearInventoryResponse_EResponse.Descriptor instead.
func (CMsgClientToGCBingoDevClearInventoryResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{22, 0}
}

type CMsgBingoSquare struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatId        *uint32                `protobuf:"varint,1,opt,name=stat_id,json=statId" json:"stat_id,omitempty"`
	StatThreshold *int32                 `protobuf:"varint,2,opt,name=stat_threshold,json=statThreshold" json:"stat_threshold,omitempty"`
	UpgradeLevel  *uint32                `protobuf:"varint,3,opt,name=upgrade_level,json=upgradeLevel" json:"upgrade_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBingoSquare) Reset() {
	*x = CMsgBingoSquare{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBingoSquare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBingoSquare) ProtoMessage() {}

func (x *CMsgBingoSquare) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBingoSquare.ProtoReflect.Descriptor instead.
func (*CMsgBingoSquare) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgBingoSquare) GetStatId() uint32 {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return 0
}

func (x *CMsgBingoSquare) GetStatThreshold() int32 {
	if x != nil && x.StatThreshold != nil {
		return *x.StatThreshold
	}
	return 0
}

func (x *CMsgBingoSquare) GetUpgradeLevel() uint32 {
	if x != nil && x.UpgradeLevel != nil {
		return *x.UpgradeLevel
	}
	return 0
}

type CMsgBingoTokens struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenCount    *uint32                `protobuf:"varint,1,opt,name=token_count,json=tokenCount" json:"token_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBingoTokens) Reset() {
	*x = CMsgBingoTokens{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBingoTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBingoTokens) ProtoMessage() {}

func (x *CMsgBingoTokens) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBingoTokens.ProtoReflect.Descriptor instead.
func (*CMsgBingoTokens) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgBingoTokens) GetTokenCount() uint32 {
	if x != nil && x.TokenCount != nil {
		return *x.TokenCount
	}
	return 0
}

type CMsgBingoCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Squares       []*CMsgBingoSquare     `protobuf:"bytes,1,rep,name=squares" json:"squares,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBingoCard) Reset() {
	*x = CMsgBingoCard{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBingoCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBingoCard) ProtoMessage() {}

func (x *CMsgBingoCard) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBingoCard.ProtoReflect.Descriptor instead.
func (*CMsgBingoCard) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgBingoCard) GetSquares() []*CMsgBingoSquare {
	if x != nil {
		return x.Squares
	}
	return nil
}

type CMsgBingoUserData struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	BingoCards    []*CMsgBingoUserData_BingoCardsEntry  `protobuf:"bytes,1,rep,name=bingo_cards,json=bingoCards" json:"bingo_cards,omitempty"`
	BingoTokens   []*CMsgBingoUserData_BingoTokensEntry `protobuf:"bytes,2,rep,name=bingo_tokens,json=bingoTokens" json:"bingo_tokens,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBingoUserData) Reset() {
	*x = CMsgBingoUserData{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBingoUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBingoUserData) ProtoMessage() {}

func (x *CMsgBingoUserData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBingoUserData.ProtoReflect.Descriptor instead.
func (*CMsgBingoUserData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgBingoUserData) GetBingoCards() []*CMsgBingoUserData_BingoCardsEntry {
	if x != nil {
		return x.BingoCards
	}
	return nil
}

func (x *CMsgBingoUserData) GetBingoTokens() []*CMsgBingoUserData_BingoTokensEntry {
	if x != nil {
		return x.BingoTokens
	}
	return nil
}

type CMsgClientToGCBingoGetUserData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeagueId      *uint32                `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCBingoGetUserData) Reset() {
	*x = CMsgClientToGCBingoGetUserData{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoGetUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoGetUserData) ProtoMessage() {}

func (x *CMsgClientToGCBingoGetUserData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoGetUserData.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoGetUserData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClientToGCBingoGetUserData) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

type CMsgClientToGCBingoGetUserDataResponse struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Response      *CMsgClientToGCBingoGetUserDataResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCBingoGetUserDataResponse_EResponse,def=0" json:"response,omitempty"`
	UserData      *CMsgBingoUserData                                `protobuf:"bytes,2,opt,name=user_data,json=userData" json:"user_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCBingoGetUserDataResponse fields.
const (
	Default_CMsgClientToGCBingoGetUserDataResponse_Response = CMsgClientToGCBingoGetUserDataResponse_k_eInternalError
)

func (x *CMsgClientToGCBingoGetUserDataResponse) Reset() {
	*x = CMsgClientToGCBingoGetUserDataResponse{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoGetUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoGetUserDataResponse) ProtoMessage() {}

func (x *CMsgClientToGCBingoGetUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoGetUserDataResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoGetUserDataResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgClientToGCBingoGetUserDataResponse) GetResponse() CMsgClientToGCBingoGetUserDataResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCBingoGetUserDataResponse_Response
}

func (x *CMsgClientToGCBingoGetUserDataResponse) GetUserData() *CMsgBingoUserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

type CMsgBingoIndividualStatData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatId        *uint32                `protobuf:"varint,1,opt,name=stat_id,json=statId" json:"stat_id,omitempty"`
	StatValue     *int32                 `protobuf:"varint,2,opt,name=stat_value,json=statValue" json:"stat_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBingoIndividualStatData) Reset() {
	*x = CMsgBingoIndividualStatData{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBingoIndividualStatData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBingoIndividualStatData) ProtoMessage() {}

func (x *CMsgBingoIndividualStatData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBingoIndividualStatData.ProtoReflect.Descriptor instead.
func (*CMsgBingoIndividualStatData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgBingoIndividualStatData) GetStatId() uint32 {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return 0
}

func (x *CMsgBingoIndividualStatData) GetStatValue() int32 {
	if x != nil && x.StatValue != nil {
		return *x.StatValue
	}
	return 0
}

type CMsgBingoStatsData struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	StatsData     []*CMsgBingoIndividualStatData `protobuf:"bytes,1,rep,name=stats_data,json=statsData" json:"stats_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBingoStatsData) Reset() {
	*x = CMsgBingoStatsData{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBingoStatsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBingoStatsData) ProtoMessage() {}

func (x *CMsgBingoStatsData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBingoStatsData.ProtoReflect.Descriptor instead.
func (*CMsgBingoStatsData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgBingoStatsData) GetStatsData() []*CMsgBingoIndividualStatData {
	if x != nil {
		return x.StatsData
	}
	return nil
}

type CMsgClientToGCBingoGetStatsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeagueId      *uint32                `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	LeaguePhase   *uint32                `protobuf:"varint,2,opt,name=league_phase,json=leaguePhase" json:"league_phase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCBingoGetStatsData) Reset() {
	*x = CMsgClientToGCBingoGetStatsData{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoGetStatsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoGetStatsData) ProtoMessage() {}

func (x *CMsgClientToGCBingoGetStatsData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoGetStatsData.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoGetStatsData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgClientToGCBingoGetStatsData) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CMsgClientToGCBingoGetStatsData) GetLeaguePhase() uint32 {
	if x != nil && x.LeaguePhase != nil {
		return *x.LeaguePhase
	}
	return 0
}

type CMsgClientToGCBingoGetStatsDataResponse struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Response      *CMsgClientToGCBingoGetStatsDataResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCBingoGetStatsDataResponse_EResponse,def=0" json:"response,omitempty"`
	StatsData     *CMsgBingoStatsData                                `protobuf:"bytes,2,opt,name=stats_data,json=statsData" json:"stats_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCBingoGetStatsDataResponse fields.
const (
	Default_CMsgClientToGCBingoGetStatsDataResponse_Response = CMsgClientToGCBingoGetStatsDataResponse_k_eInternalError
)

func (x *CMsgClientToGCBingoGetStatsDataResponse) Reset() {
	*x = CMsgClientToGCBingoGetStatsDataResponse{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoGetStatsDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoGetStatsDataResponse) ProtoMessage() {}

func (x *CMsgClientToGCBingoGetStatsDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoGetStatsDataResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoGetStatsDataResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgClientToGCBingoGetStatsDataResponse) GetResponse() CMsgClientToGCBingoGetStatsDataResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCBingoGetStatsDataResponse_Response
}

func (x *CMsgClientToGCBingoGetStatsDataResponse) GetStatsData() *CMsgBingoStatsData {
	if x != nil {
		return x.StatsData
	}
	return nil
}

type CMsgGCToClientBingoUserDataUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeagueId      *uint32                `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	UserData      *CMsgBingoUserData     `protobuf:"bytes,2,opt,name=user_data,json=userData" json:"user_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCToClientBingoUserDataUpdated) Reset() {
	*x = CMsgGCToClientBingoUserDataUpdated{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCToClientBingoUserDataUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientBingoUserDataUpdated) ProtoMessage() {}

func (x *CMsgGCToClientBingoUserDataUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientBingoUserDataUpdated.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientBingoUserDataUpdated) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgGCToClientBingoUserDataUpdated) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CMsgGCToClientBingoUserDataUpdated) GetUserData() *CMsgBingoUserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

type CMsgClientToGCBingoClaimRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeagueId      *uint32                `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	LeaguePhase   *uint32                `protobuf:"varint,2,opt,name=league_phase,json=leaguePhase" json:"league_phase,omitempty"`
	RowIndex      *uint32                `protobuf:"varint,3,opt,name=row_index,json=rowIndex" json:"row_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCBingoClaimRow) Reset() {
	*x = CMsgClientToGCBingoClaimRow{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoClaimRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoClaimRow) ProtoMessage() {}

func (x *CMsgClientToGCBingoClaimRow) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoClaimRow.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoClaimRow) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgClientToGCBingoClaimRow) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CMsgClientToGCBingoClaimRow) GetLeaguePhase() uint32 {
	if x != nil && x.LeaguePhase != nil {
		return *x.LeaguePhase
	}
	return 0
}

func (x *CMsgClientToGCBingoClaimRow) GetRowIndex() uint32 {
	if x != nil && x.RowIndex != nil {
		return *x.RowIndex
	}
	return 0
}

type CMsgClientToGCBingoClaimRowResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Response      *CMsgClientToGCBingoClaimRowResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCBingoClaimRowResponse_EResponse,def=0" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCBingoClaimRowResponse fields.
const (
	Default_CMsgClientToGCBingoClaimRowResponse_Response = CMsgClientToGCBingoClaimRowResponse_k_eInternalError
)

func (x *CMsgClientToGCBingoClaimRowResponse) Reset() {
	*x = CMsgClientToGCBingoClaimRowResponse{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoClaimRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoClaimRowResponse) ProtoMessage() {}

func (x *CMsgClientToGCBingoClaimRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoClaimRowResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoClaimRowResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgClientToGCBingoClaimRowResponse) GetResponse() CMsgClientToGCBingoClaimRowResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCBingoClaimRowResponse_Response
}

type CMsgClientToGCBingoShuffleCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeagueId      *uint32                `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	LeaguePhase   *uint32                `protobuf:"varint,2,opt,name=league_phase,json=leaguePhase" json:"league_phase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCBingoShuffleCard) Reset() {
	*x = CMsgClientToGCBingoShuffleCard{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoShuffleCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoShuffleCard) ProtoMessage() {}

func (x *CMsgClientToGCBingoShuffleCard) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoShuffleCard.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoShuffleCard) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgClientToGCBingoShuffleCard) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CMsgClientToGCBingoShuffleCard) GetLeaguePhase() uint32 {
	if x != nil && x.LeaguePhase != nil {
		return *x.LeaguePhase
	}
	return 0
}

type CMsgClientToGCBingoShuffleCardResponse struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Response      *CMsgClientToGCBingoShuffleCardResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCBingoShuffleCardResponse_EResponse,def=0" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCBingoShuffleCardResponse fields.
const (
	Default_CMsgClientToGCBingoShuffleCardResponse_Response = CMsgClientToGCBingoShuffleCardResponse_k_eInternalError
)

func (x *CMsgClientToGCBingoShuffleCardResponse) Reset() {
	*x = CMsgClientToGCBingoShuffleCardResponse{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoShuffleCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoShuffleCardResponse) ProtoMessage() {}

func (x *CMsgClientToGCBingoShuffleCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoShuffleCardResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoShuffleCardResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgClientToGCBingoShuffleCardResponse) GetResponse() CMsgClientToGCBingoShuffleCardResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCBingoShuffleCardResponse_Response
}

type CMsgClientToGCBingoModifySquare struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	LeagueId      *uint32                                        `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	LeaguePhase   *uint32                                        `protobuf:"varint,2,opt,name=league_phase,json=leaguePhase" json:"league_phase,omitempty"`
	SquareIndex   *uint32                                        `protobuf:"varint,3,opt,name=square_index,json=squareIndex" json:"square_index,omitempty"`
	Action        *CMsgClientToGCBingoModifySquare_EModifyAction `protobuf:"varint,4,opt,name=action,enum=protocol.CMsgClientToGCBingoModifySquare_EModifyAction,def=0" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCBingoModifySquare fields.
const (
	Default_CMsgClientToGCBingoModifySquare_Action = CMsgClientToGCBingoModifySquare_k_eRerollStat
)

func (x *CMsgClientToGCBingoModifySquare) Reset() {
	*x = CMsgClientToGCBingoModifySquare{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoModifySquare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoModifySquare) ProtoMessage() {}

func (x *CMsgClientToGCBingoModifySquare) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoModifySquare.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoModifySquare) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgClientToGCBingoModifySquare) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CMsgClientToGCBingoModifySquare) GetLeaguePhase() uint32 {
	if x != nil && x.LeaguePhase != nil {
		return *x.LeaguePhase
	}
	return 0
}

func (x *CMsgClientToGCBingoModifySquare) GetSquareIndex() uint32 {
	if x != nil && x.SquareIndex != nil {
		return *x.SquareIndex
	}
	return 0
}

func (x *CMsgClientToGCBingoModifySquare) GetAction() CMsgClientToGCBingoModifySquare_EModifyAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return Default_CMsgClientToGCBingoModifySquare_Action
}

type CMsgClientToGCBingoModifySquareResponse struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Response      *CMsgClientToGCBingoModifySquareResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCBingoModifySquareResponse_EResponse,def=0" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCBingoModifySquareResponse fields.
const (
	Default_CMsgClientToGCBingoModifySquareResponse_Response = CMsgClientToGCBingoModifySquareResponse_k_eInternalError
)

func (x *CMsgClientToGCBingoModifySquareResponse) Reset() {
	*x = CMsgClientToGCBingoModifySquareResponse{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoModifySquareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoModifySquareResponse) ProtoMessage() {}

func (x *CMsgClientToGCBingoModifySquareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoModifySquareResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoModifySquareResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgClientToGCBingoModifySquareResponse) GetResponse() CMsgClientToGCBingoModifySquareResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCBingoModifySquareResponse_Response
}

type CMsgClientToGCBingoDevRerollCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeagueId      *uint32                `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	LeaguePhase   *uint32                `protobuf:"varint,2,opt,name=league_phase,json=leaguePhase" json:"league_phase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCBingoDevRerollCard) Reset() {
	*x = CMsgClientToGCBingoDevRerollCard{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoDevRerollCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoDevRerollCard) ProtoMessage() {}

func (x *CMsgClientToGCBingoDevRerollCard) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoDevRerollCard.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoDevRerollCard) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgClientToGCBingoDevRerollCard) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CMsgClientToGCBingoDevRerollCard) GetLeaguePhase() uint32 {
	if x != nil && x.LeaguePhase != nil {
		return *x.LeaguePhase
	}
	return 0
}

type CMsgClientToGCBingoDevRerollCardResponse struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	Response      *CMsgClientToGCBingoDevRerollCardResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCBingoDevRerollCardResponse_EResponse,def=0" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCBingoDevRerollCardResponse fields.
const (
	Default_CMsgClientToGCBingoDevRerollCardResponse_Response = CMsgClientToGCBingoDevRerollCardResponse_k_eInternalError
)

func (x *CMsgClientToGCBingoDevRerollCardResponse) Reset() {
	*x = CMsgClientToGCBingoDevRerollCardResponse{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoDevRerollCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoDevRerollCardResponse) ProtoMessage() {}

func (x *CMsgClientToGCBingoDevRerollCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoDevRerollCardResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoDevRerollCardResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgClientToGCBingoDevRerollCardResponse) GetResponse() CMsgClientToGCBingoDevRerollCardResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCBingoDevRerollCardResponse_Response
}

type CMsgClientToGCBingoDevAddTokens struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeagueId      *uint32                `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	LeaguePhase   *uint32                `protobuf:"varint,2,opt,name=league_phase,json=leaguePhase" json:"league_phase,omitempty"`
	TokenCount    *int32                 `protobuf:"varint,3,opt,name=token_count,json=tokenCount" json:"token_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCBingoDevAddTokens) Reset() {
	*x = CMsgClientToGCBingoDevAddTokens{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoDevAddTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoDevAddTokens) ProtoMessage() {}

func (x *CMsgClientToGCBingoDevAddTokens) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoDevAddTokens.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoDevAddTokens) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgClientToGCBingoDevAddTokens) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CMsgClientToGCBingoDevAddTokens) GetLeaguePhase() uint32 {
	if x != nil && x.LeaguePhase != nil {
		return *x.LeaguePhase
	}
	return 0
}

func (x *CMsgClientToGCBingoDevAddTokens) GetTokenCount() int32 {
	if x != nil && x.TokenCount != nil {
		return *x.TokenCount
	}
	return 0
}

type CMsgClientToGCBingoDevAddTokensResponse struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Response      *CMsgClientToGCBingoDevAddTokensResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCBingoDevAddTokensResponse_EResponse,def=0" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCBingoDevAddTokensResponse fields.
const (
	Default_CMsgClientToGCBingoDevAddTokensResponse_Response = CMsgClientToGCBingoDevAddTokensResponse_k_eInternalError
)

func (x *CMsgClientToGCBingoDevAddTokensResponse) Reset() {
	*x = CMsgClientToGCBingoDevAddTokensResponse{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoDevAddTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoDevAddTokensResponse) ProtoMessage() {}

func (x *CMsgClientToGCBingoDevAddTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoDevAddTokensResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoDevAddTokensResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgClientToGCBingoDevAddTokensResponse) GetResponse() CMsgClientToGCBingoDevAddTokensResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCBingoDevAddTokensResponse_Response
}

type CMsgClientToGCBingoDevClearInventory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeagueId      *uint32                `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCBingoDevClearInventory) Reset() {
	*x = CMsgClientToGCBingoDevClearInventory{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoDevClearInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoDevClearInventory) ProtoMessage() {}

func (x *CMsgClientToGCBingoDevClearInventory) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoDevClearInventory.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoDevClearInventory) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgClientToGCBingoDevClearInventory) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

type CMsgClientToGCBingoDevClearInventoryResponse struct {
	state         protoimpl.MessageState                                  `protogen:"open.v1"`
	Response      *CMsgClientToGCBingoDevClearInventoryResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCBingoDevClearInventoryResponse_EResponse,def=0" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCBingoDevClearInventoryResponse fields.
const (
	Default_CMsgClientToGCBingoDevClearInventoryResponse_Response = CMsgClientToGCBingoDevClearInventoryResponse_k_eInternalError
)

func (x *CMsgClientToGCBingoDevClearInventoryResponse) Reset() {
	*x = CMsgClientToGCBingoDevClearInventoryResponse{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCBingoDevClearInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBingoDevClearInventoryResponse) ProtoMessage() {}

func (x *CMsgClientToGCBingoDevClearInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBingoDevClearInventoryResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBingoDevClearInventoryResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgClientToGCBingoDevClearInventoryResponse) GetResponse() CMsgClientToGCBingoDevClearInventoryResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCBingoDevClearInventoryResponse_Response
}

type CMsgBingoUserData_BingoCardsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *uint32                `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value         *CMsgBingoCard         `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBingoUserData_BingoCardsEntry) Reset() {
	*x = CMsgBingoUserData_BingoCardsEntry{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBingoUserData_BingoCardsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBingoUserData_BingoCardsEntry) ProtoMessage() {}

func (x *CMsgBingoUserData_BingoCardsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBingoUserData_BingoCardsEntry.ProtoReflect.Descriptor instead.
func (*CMsgBingoUserData_BingoCardsEntry) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgBingoUserData_BingoCardsEntry) GetKey() uint32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *CMsgBingoUserData_BingoCardsEntry) GetValue() *CMsgBingoCard {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgBingoUserData_BingoTokensEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *uint32                `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value         *CMsgBingoTokens       `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBingoUserData_BingoTokensEntry) Reset() {
	*x = CMsgBingoUserData_BingoTokensEntry{}
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBingoUserData_BingoTokensEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBingoUserData_BingoTokensEntry) ProtoMessage() {}

func (x *CMsgBingoUserData_BingoTokensEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_bingo_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBingoUserData_BingoTokensEntry.ProtoReflect.Descriptor instead.
func (*CMsgBingoUserData_BingoTokensEntry) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_bingo_proto_rawDescGZIP(), []int{3, 1}
}

func (x *CMsgBingoUserData_BingoTokensEntry) GetKey() uint32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *CMsgBingoUserData_BingoTokensEntry) GetValue() *CMsgBingoTokens {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_dota_gcmessages_client_bingo_proto protoreflect.FileDescriptor

var file_dota_gcmessages_client_bingo_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x69, 0x6e, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x13,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64, 0x6f,
	0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64, 0x6f, 0x74, 0x61,
	0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x77, 0x65, 0x62, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x63, 0x73, 0x64, 0x6b, 0x5f,
	0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x65, 0x63, 0x6f, 0x6e, 0x5f, 0x67, 0x63,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x64, 0x6f, 0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x76, 0x61,
	0x6c, 0x76, 0x65, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x67, 0x6f,
	0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x32, 0x0a, 0x0f, 0x43,
	0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x44, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x33, 0x0a, 0x07, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x07, 0x73, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x73, 0x22, 0xdd, 0x02, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x69,
	0x6e, 0x67, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0b, 0x62,
	0x69, 0x6e, 0x67, 0x6f, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x42, 0x69, 0x6e, 0x67, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x42, 0x69,
	0x6e, 0x67, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x62,
	0x69, 0x6e, 0x67, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x62, 0x69, 0x6e,
	0x67, 0x6f, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42,
	0x69, 0x6e, 0x67, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x42, 0x69, 0x6e,
	0x67, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x62,
	0x69, 0x6e, 0x67, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x52, 0x0a, 0x0f, 0x42, 0x69,
	0x6e, 0x67, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x69,
	0x6e, 0x67, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x55,
	0x0a, 0x10, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x49, 0x64, 0x22, 0xb0, 0x02, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x68, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x67,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f,
	0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x22, 0x55, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x42,
	0x69, 0x6e, 0x67, 0x6f, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a,
	0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x49, 0x6e, 0x64,
	0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x1f, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67,
	0x6f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x22, 0xb5, 0x02,
	0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x42, 0x69, 0x6e, 0x67, 0x6f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x62, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75,
	0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x10, 0x04, 0x22, 0x7b, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54,
	0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x67, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x7a, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x6f,
	0x77, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x98,
	0x02, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x52, 0x6f, 0x77, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x10, 0x06, 0x22, 0x60, 0x0a, 0x1e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f,
	0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x22, 0xb9, 0x02, 0x0a, 0x26,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69,
	0x6e, 0x67, 0x6f, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa4, 0x01, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75,
	0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65,
	0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x73, 0x75, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x10, 0x08, 0x22, 0x98, 0x02, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x71, 0x75, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5e,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x2e, 0x45, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x0d, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x72, 0x6f,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x0d, 0x45, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x10, 0x01, 0x22, 0xf8, 0x02, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x09, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x73, 0x75,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x10, 0x08,
	0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x43, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x43, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x10, 0x0b, 0x22, 0x62, 0x0a,
	0x20, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42,
	0x69, 0x6e, 0x67, 0x6f, 0x44, 0x65, 0x76, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x22, 0xa2, 0x02, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x44, 0x65, 0x76, 0x52, 0x65, 0x72, 0x6f,
	0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x44,
	0x65, 0x76, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x45,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12,
	0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x10, 0x07, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x44, 0x65,
	0x76, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x27,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69,
	0x6e, 0x67, 0x6f, 0x44, 0x65, 0x76, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x44, 0x65, 0x76, 0x41, 0x64, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f,
	0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x6b,
	0x5f, 0x65, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x07, 0x22, 0x43,
	0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x42, 0x69, 0x6e, 0x67, 0x6f, 0x44, 0x65, 0x76, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x49, 0x64, 0x22, 0xaa, 0x02, 0x0a, 0x2c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x44, 0x65, 0x76, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x42, 0x69, 0x6e, 0x67, 0x6f, 0x44, 0x65, 0x76, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54,
	0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x10, 0x06, 0x12, 0x11, 0x0a,
	0x0d, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x07,
	0x2a, 0xd1, 0x03, 0x0a, 0x11, 0x45, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x65, 0x42, 0x69, 0x6e,
	0x67, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x6b, 0x5f, 0x65, 0x42, 0x69,
	0x6e, 0x67, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44,
	0x65, 0x76, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x10, 0x01,
	0x12, 0x29, 0x0a, 0x25, 0x6b, 0x5f, 0x65, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x65, 0x76, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x6b,
	0x5f, 0x65, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x44, 0x65, 0x76, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64,
	0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x65, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x6b, 0x5f, 0x65, 0x42, 0x69,
	0x6e, 0x67, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52,
	0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x10, 0x05, 0x12, 0x25, 0x0a,
	0x21, 0x6b, 0x5f, 0x65, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x6b, 0x5f, 0x65, 0x42, 0x69, 0x6e, 0x67, 0x6f,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x52, 0x6f, 0x77, 0x10, 0x07, 0x12, 0x2d, 0x0a, 0x29, 0x6b, 0x5f, 0x65, 0x42, 0x69, 0x6e,
	0x67, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x10, 0x08, 0x12, 0x2a, 0x0a, 0x26, 0x6b, 0x5f, 0x65, 0x42, 0x69, 0x6e, 0x67,
	0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x10,
	0x09, 0x12, 0x31, 0x0a, 0x2d, 0x6b, 0x5f, 0x65, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x46, 0x69, 0x78,
	0x75, 0x70, 0x10, 0x0a, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c,
})

var (
	file_dota_gcmessages_client_bingo_proto_rawDescOnce sync.Once
	file_dota_gcmessages_client_bingo_proto_rawDescData []byte
)

func file_dota_gcmessages_client_bingo_proto_rawDescGZIP() []byte {
	file_dota_gcmessages_client_bingo_proto_rawDescOnce.Do(func() {
		file_dota_gcmessages_client_bingo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dota_gcmessages_client_bingo_proto_rawDesc), len(file_dota_gcmessages_client_bingo_proto_rawDesc)))
	})
	return file_dota_gcmessages_client_bingo_proto_rawDescData
}

var file_dota_gcmessages_client_bingo_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_dota_gcmessages_client_bingo_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_dota_gcmessages_client_bingo_proto_goTypes = []any{
	(EBingoAuditAction)(0),                                      // 0: protocol.EBingoAuditAction
	(CMsgClientToGCBingoGetUserDataResponse_EResponse)(0),       // 1: protocol.CMsgClientToGCBingoGetUserDataResponse.EResponse
	(CMsgClientToGCBingoGetStatsDataResponse_EResponse)(0),      // 2: protocol.CMsgClientToGCBingoGetStatsDataResponse.EResponse
	(CMsgClientToGCBingoClaimRowResponse_EResponse)(0),          // 3: protocol.CMsgClientToGCBingoClaimRowResponse.EResponse
	(CMsgClientToGCBingoShuffleCardResponse_EResponse)(0),       // 4: protocol.CMsgClientToGCBingoShuffleCardResponse.EResponse
	(CMsgClientToGCBingoModifySquare_EModifyAction)(0),          // 5: protocol.CMsgClientToGCBingoModifySquare.EModifyAction
	(CMsgClientToGCBingoModifySquareResponse_EResponse)(0),      // 6: protocol.CMsgClientToGCBingoModifySquareResponse.EResponse
	(CMsgClientToGCBingoDevRerollCardResponse_EResponse)(0),     // 7: protocol.CMsgClientToGCBingoDevRerollCardResponse.EResponse
	(CMsgClientToGCBingoDevAddTokensResponse_EResponse)(0),      // 8: protocol.CMsgClientToGCBingoDevAddTokensResponse.EResponse
	(CMsgClientToGCBingoDevClearInventoryResponse_EResponse)(0), // 9: protocol.CMsgClientToGCBingoDevClearInventoryResponse.EResponse
	(*CMsgBingoSquare)(nil),                                     // 10: protocol.CMsgBingoSquare
	(*CMsgBingoTokens)(nil),                                     // 11: protocol.CMsgBingoTokens
	(*CMsgBingoCard)(nil),                                       // 12: protocol.CMsgBingoCard
	(*CMsgBingoUserData)(nil),                                   // 13: protocol.CMsgBingoUserData
	(*CMsgClientToGCBingoGetUserData)(nil),                      // 14: protocol.CMsgClientToGCBingoGetUserData
	(*CMsgClientToGCBingoGetUserDataResponse)(nil),              // 15: protocol.CMsgClientToGCBingoGetUserDataResponse
	(*CMsgBingoIndividualStatData)(nil),                         // 16: protocol.CMsgBingoIndividualStatData
	(*CMsgBingoStatsData)(nil),                                  // 17: protocol.CMsgBingoStatsData
	(*CMsgClientToGCBingoGetStatsData)(nil),                     // 18: protocol.CMsgClientToGCBingoGetStatsData
	(*CMsgClientToGCBingoGetStatsDataResponse)(nil),             // 19: protocol.CMsgClientToGCBingoGetStatsDataResponse
	(*CMsgGCToClientBingoUserDataUpdated)(nil),                  // 20: protocol.CMsgGCToClientBingoUserDataUpdated
	(*CMsgClientToGCBingoClaimRow)(nil),                         // 21: protocol.CMsgClientToGCBingoClaimRow
	(*CMsgClientToGCBingoClaimRowResponse)(nil),                 // 22: protocol.CMsgClientToGCBingoClaimRowResponse
	(*CMsgClientToGCBingoShuffleCard)(nil),                      // 23: protocol.CMsgClientToGCBingoShuffleCard
	(*CMsgClientToGCBingoShuffleCardResponse)(nil),              // 24: protocol.CMsgClientToGCBingoShuffleCardResponse
	(*CMsgClientToGCBingoModifySquare)(nil),                     // 25: protocol.CMsgClientToGCBingoModifySquare
	(*CMsgClientToGCBingoModifySquareResponse)(nil),             // 26: protocol.CMsgClientToGCBingoModifySquareResponse
	(*CMsgClientToGCBingoDevRerollCard)(nil),                    // 27: protocol.CMsgClientToGCBingoDevRerollCard
	(*CMsgClientToGCBingoDevRerollCardResponse)(nil),            // 28: protocol.CMsgClientToGCBingoDevRerollCardResponse
	(*CMsgClientToGCBingoDevAddTokens)(nil),                     // 29: protocol.CMsgClientToGCBingoDevAddTokens
	(*CMsgClientToGCBingoDevAddTokensResponse)(nil),             // 30: protocol.CMsgClientToGCBingoDevAddTokensResponse
	(*CMsgClientToGCBingoDevClearInventory)(nil),                // 31: protocol.CMsgClientToGCBingoDevClearInventory
	(*CMsgClientToGCBingoDevClearInventoryResponse)(nil),        // 32: protocol.CMsgClientToGCBingoDevClearInventoryResponse
	(*CMsgBingoUserData_BingoCardsEntry)(nil),                   // 33: protocol.CMsgBingoUserData.BingoCardsEntry
	(*CMsgBingoUserData_BingoTokensEntry)(nil),                  // 34: protocol.CMsgBingoUserData.BingoTokensEntry
}
var file_dota_gcmessages_client_bingo_proto_depIdxs = []int32{
	10, // 0: protocol.CMsgBingoCard.squares:type_name -> protocol.CMsgBingoSquare
	33, // 1: protocol.CMsgBingoUserData.bingo_cards:type_name -> protocol.CMsgBingoUserData.BingoCardsEntry
	34, // 2: protocol.CMsgBingoUserData.bingo_tokens:type_name -> protocol.CMsgBingoUserData.BingoTokensEntry
	1,  // 3: protocol.CMsgClientToGCBingoGetUserDataResponse.response:type_name -> protocol.CMsgClientToGCBingoGetUserDataResponse.EResponse
	13, // 4: protocol.CMsgClientToGCBingoGetUserDataResponse.user_data:type_name -> protocol.CMsgBingoUserData
	16, // 5: protocol.CMsgBingoStatsData.stats_data:type_name -> protocol.CMsgBingoIndividualStatData
	2,  // 6: protocol.CMsgClientToGCBingoGetStatsDataResponse.response:type_name -> protocol.CMsgClientToGCBingoGetStatsDataResponse.EResponse
	17, // 7: protocol.CMsgClientToGCBingoGetStatsDataResponse.stats_data:type_name -> protocol.CMsgBingoStatsData
	13, // 8: protocol.CMsgGCToClientBingoUserDataUpdated.user_data:type_name -> protocol.CMsgBingoUserData
	3,  // 9: protocol.CMsgClientToGCBingoClaimRowResponse.response:type_name -> protocol.CMsgClientToGCBingoClaimRowResponse.EResponse
	4,  // 10: protocol.CMsgClientToGCBingoShuffleCardResponse.response:type_name -> protocol.CMsgClientToGCBingoShuffleCardResponse.EResponse
	5,  // 11: protocol.CMsgClientToGCBingoModifySquare.action:type_name -> protocol.CMsgClientToGCBingoModifySquare.EModifyAction
	6,  // 12: protocol.CMsgClientToGCBingoModifySquareResponse.response:type_name -> protocol.CMsgClientToGCBingoModifySquareResponse.EResponse
	7,  // 13: protocol.CMsgClientToGCBingoDevRerollCardResponse.response:type_name -> protocol.CMsgClientToGCBingoDevRerollCardResponse.EResponse
	8,  // 14: protocol.CMsgClientToGCBingoDevAddTokensResponse.response:type_name -> protocol.CMsgClientToGCBingoDevAddTokensResponse.EResponse
	9,  // 15: protocol.CMsgClientToGCBingoDevClearInventoryResponse.response:type_name -> protocol.CMsgClientToGCBingoDevClearInventoryResponse.EResponse
	12, // 16: protocol.CMsgBingoUserData.BingoCardsEntry.value:type_name -> protocol.CMsgBingoCard
	11, // 17: protocol.CMsgBingoUserData.BingoTokensEntry.value:type_name -> protocol.CMsgBingoTokens
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_dota_gcmessages_client_bingo_proto_init() }
func file_dota_gcmessages_client_bingo_proto_init() {
	if File_dota_gcmessages_client_bingo_proto != nil {
		return
	}
	file_steammessages_proto_init()
	file_dota_shared_enums_proto_init()
	file_dota_gcmessages_common_proto_init()
	file_dota_gcmessages_webapi_proto_init()
	file_gcsdk_gcmessages_proto_init()
	file_base_gcmessages_proto_init()
	file_econ_gcmessages_proto_init()
	file_dota_gcmessages_client_proto_init()
	file_valveextensions_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dota_gcmessages_client_bingo_proto_rawDesc), len(file_dota_gcmessages_client_bingo_proto_rawDesc)),
			NumEnums:      10,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dota_gcmessages_client_bingo_proto_goTypes,
		DependencyIndexes: file_dota_gcmessages_client_bingo_proto_depIdxs,
		EnumInfos:         file_dota_gcmessages_client_bingo_proto_enumTypes,
		MessageInfos:      file_dota_gcmessages_client_bingo_proto_msgTypes,
	}.Build()
	File_dota_gcmessages_client_bingo_proto = out.File
	file_dota_gcmessages_client_bingo_proto_goTypes = nil
	file_dota_gcmessages_client_bingo_proto_depIdxs = nil
}
