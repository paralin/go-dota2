// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.2
// source: dota_gcmessages_client_coaching.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ECoachTeammateRating int32

const (
	ECoachTeammateRating_k_ECoachTeammateRating_None     ECoachTeammateRating = 0
	ECoachTeammateRating_k_ECoachTeammateRating_Positive ECoachTeammateRating = 1
	ECoachTeammateRating_k_ECoachTeammateRating_Negative ECoachTeammateRating = 2
	ECoachTeammateRating_k_ECoachTeammateRating_Abusive  ECoachTeammateRating = 3
)

// Enum value maps for ECoachTeammateRating.
var (
	ECoachTeammateRating_name = map[int32]string{
		0: "k_ECoachTeammateRating_None",
		1: "k_ECoachTeammateRating_Positive",
		2: "k_ECoachTeammateRating_Negative",
		3: "k_ECoachTeammateRating_Abusive",
	}
	ECoachTeammateRating_value = map[string]int32{
		"k_ECoachTeammateRating_None":     0,
		"k_ECoachTeammateRating_Positive": 1,
		"k_ECoachTeammateRating_Negative": 2,
		"k_ECoachTeammateRating_Abusive":  3,
	}
)

func (x ECoachTeammateRating) Enum() *ECoachTeammateRating {
	p := new(ECoachTeammateRating)
	*p = x
	return p
}

func (x ECoachTeammateRating) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECoachTeammateRating) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[0].Descriptor()
}

func (ECoachTeammateRating) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[0]
}

func (x ECoachTeammateRating) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECoachTeammateRating) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECoachTeammateRating(num)
	return nil
}

// Deprecated: Use ECoachTeammateRating.Descriptor instead.
func (ECoachTeammateRating) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{0}
}

type EPrivateCoachingSessionState int32

const (
	EPrivateCoachingSessionState_k_ePrivateCoachingSessionState_Invalid           EPrivateCoachingSessionState = 0
	EPrivateCoachingSessionState_k_ePrivateCoachingSessionState_SearchingForCoach EPrivateCoachingSessionState = 1
	EPrivateCoachingSessionState_k_ePrivateCoachingSessionState_CoachAssigned     EPrivateCoachingSessionState = 2
	EPrivateCoachingSessionState_k_ePrivateCoachingSessionState_Finished          EPrivateCoachingSessionState = 3
	EPrivateCoachingSessionState_k_ePrivateCoachingSessionState_Expired           EPrivateCoachingSessionState = 4
	EPrivateCoachingSessionState_k_ePrivateCoachingSessionState_Abandoned         EPrivateCoachingSessionState = 5
)

// Enum value maps for EPrivateCoachingSessionState.
var (
	EPrivateCoachingSessionState_name = map[int32]string{
		0: "k_ePrivateCoachingSessionState_Invalid",
		1: "k_ePrivateCoachingSessionState_SearchingForCoach",
		2: "k_ePrivateCoachingSessionState_CoachAssigned",
		3: "k_ePrivateCoachingSessionState_Finished",
		4: "k_ePrivateCoachingSessionState_Expired",
		5: "k_ePrivateCoachingSessionState_Abandoned",
	}
	EPrivateCoachingSessionState_value = map[string]int32{
		"k_ePrivateCoachingSessionState_Invalid":           0,
		"k_ePrivateCoachingSessionState_SearchingForCoach": 1,
		"k_ePrivateCoachingSessionState_CoachAssigned":     2,
		"k_ePrivateCoachingSessionState_Finished":          3,
		"k_ePrivateCoachingSessionState_Expired":           4,
		"k_ePrivateCoachingSessionState_Abandoned":         5,
	}
)

func (x EPrivateCoachingSessionState) Enum() *EPrivateCoachingSessionState {
	p := new(EPrivateCoachingSessionState)
	*p = x
	return p
}

func (x EPrivateCoachingSessionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPrivateCoachingSessionState) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[1].Descriptor()
}

func (EPrivateCoachingSessionState) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[1]
}

func (x EPrivateCoachingSessionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPrivateCoachingSessionState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPrivateCoachingSessionState(num)
	return nil
}

// Deprecated: Use EPrivateCoachingSessionState.Descriptor instead.
func (EPrivateCoachingSessionState) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{1}
}

type EPrivateCoachingSessionMemberFlag int32

const (
	EPrivateCoachingSessionMemberFlag_k_EPrivateCoachingSessionMemberFlag_Requester   EPrivateCoachingSessionMemberFlag = 1
	EPrivateCoachingSessionMemberFlag_k_EPrivateCoachingSessionMemberFlag_Coach       EPrivateCoachingSessionMemberFlag = 2
	EPrivateCoachingSessionMemberFlag_k_EPrivateCoachingSessionMemberFlag_LeftSession EPrivateCoachingSessionMemberFlag = 4
)

// Enum value maps for EPrivateCoachingSessionMemberFlag.
var (
	EPrivateCoachingSessionMemberFlag_name = map[int32]string{
		1: "k_EPrivateCoachingSessionMemberFlag_Requester",
		2: "k_EPrivateCoachingSessionMemberFlag_Coach",
		4: "k_EPrivateCoachingSessionMemberFlag_LeftSession",
	}
	EPrivateCoachingSessionMemberFlag_value = map[string]int32{
		"k_EPrivateCoachingSessionMemberFlag_Requester":   1,
		"k_EPrivateCoachingSessionMemberFlag_Coach":       2,
		"k_EPrivateCoachingSessionMemberFlag_LeftSession": 4,
	}
)

func (x EPrivateCoachingSessionMemberFlag) Enum() *EPrivateCoachingSessionMemberFlag {
	p := new(EPrivateCoachingSessionMemberFlag)
	*p = x
	return p
}

func (x EPrivateCoachingSessionMemberFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPrivateCoachingSessionMemberFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[2].Descriptor()
}

func (EPrivateCoachingSessionMemberFlag) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[2]
}

func (x EPrivateCoachingSessionMemberFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPrivateCoachingSessionMemberFlag) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPrivateCoachingSessionMemberFlag(num)
	return nil
}

// Deprecated: Use EPrivateCoachingSessionMemberFlag.Descriptor instead.
func (EPrivateCoachingSessionMemberFlag) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{2}
}

type EPlayerCoachMatchFlag int32

const (
	EPlayerCoachMatchFlag_k_EPlayerCoachMatchFlag_EligibleForRewards EPlayerCoachMatchFlag = 1
	EPlayerCoachMatchFlag_k_EPlayerCoachMatchFlag_PrivateCoach       EPlayerCoachMatchFlag = 2
)

// Enum value maps for EPlayerCoachMatchFlag.
var (
	EPlayerCoachMatchFlag_name = map[int32]string{
		1: "k_EPlayerCoachMatchFlag_EligibleForRewards",
		2: "k_EPlayerCoachMatchFlag_PrivateCoach",
	}
	EPlayerCoachMatchFlag_value = map[string]int32{
		"k_EPlayerCoachMatchFlag_EligibleForRewards": 1,
		"k_EPlayerCoachMatchFlag_PrivateCoach":       2,
	}
)

func (x EPlayerCoachMatchFlag) Enum() *EPlayerCoachMatchFlag {
	p := new(EPlayerCoachMatchFlag)
	*p = x
	return p
}

func (x EPlayerCoachMatchFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPlayerCoachMatchFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[3].Descriptor()
}

func (EPlayerCoachMatchFlag) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[3]
}

func (x EPlayerCoachMatchFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPlayerCoachMatchFlag) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPlayerCoachMatchFlag(num)
	return nil
}

// Deprecated: Use EPlayerCoachMatchFlag.Descriptor instead.
func (EPlayerCoachMatchFlag) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{3}
}

type CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse int32

const (
	CMsgClientToGCRequestPlayerCoachMatchesResponse_k_eInternalError CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse = 0
	CMsgClientToGCRequestPlayerCoachMatchesResponse_k_eSuccess       CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse = 1
	CMsgClientToGCRequestPlayerCoachMatchesResponse_k_eTooBusy       CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse = 2
	CMsgClientToGCRequestPlayerCoachMatchesResponse_k_eDisabled      CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse = 3
)

// Enum value maps for CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse.
var (
	CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
	}
	CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
	}
)

func (x CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse) Enum() *CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse {
	p := new(CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[4].Descriptor()
}

func (CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[4]
}

func (x CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse.Descriptor instead.
func (CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{8, 0}
}

type CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse int32

const (
	CMsgClientToGCRequestPlayerCoachMatchResponse_k_eInternalError CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse = 0
	CMsgClientToGCRequestPlayerCoachMatchResponse_k_eSuccess       CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse = 1
	CMsgClientToGCRequestPlayerCoachMatchResponse_k_eTooBusy       CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse = 2
	CMsgClientToGCRequestPlayerCoachMatchResponse_k_eDisabled      CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse = 3
)

// Enum value maps for CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse.
var (
	CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
	}
	CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
	}
)

func (x CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse) Enum() *CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse {
	p := new(CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[5].Descriptor()
}

func (CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[5]
}

func (x CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse.Descriptor instead.
func (CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{10, 0}
}

type CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse int32

const (
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eInternalError            CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 0
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eSuccess                  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 1
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eTooBusy                  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 2
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eDisabled                 CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 3
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eInvalidInput             CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 4
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eAlreadySubmitted         CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 5
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eVotingFinished           CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 6
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_ePlayerNotInMatch         CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 7
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eCoachNotInMatch          CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 8
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_ePlayerNotOnCoachTeam     CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 9
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_ePlayerInSamePartyAsCoach CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 10
	CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eMatchNotEligible         CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse = 11
)

// Enum value maps for CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse.
var (
	CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eTooBusy",
		3:  "k_eDisabled",
		4:  "k_eInvalidInput",
		5:  "k_eAlreadySubmitted",
		6:  "k_eVotingFinished",
		7:  "k_ePlayerNotInMatch",
		8:  "k_eCoachNotInMatch",
		9:  "k_ePlayerNotOnCoachTeam",
		10: "k_ePlayerInSamePartyAsCoach",
		11: "k_eMatchNotEligible",
	}
	CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_value = map[string]int32{
		"k_eInternalError":            0,
		"k_eSuccess":                  1,
		"k_eTooBusy":                  2,
		"k_eDisabled":                 3,
		"k_eInvalidInput":             4,
		"k_eAlreadySubmitted":         5,
		"k_eVotingFinished":           6,
		"k_ePlayerNotInMatch":         7,
		"k_eCoachNotInMatch":          8,
		"k_ePlayerNotOnCoachTeam":     9,
		"k_ePlayerInSamePartyAsCoach": 10,
		"k_eMatchNotEligible":         11,
	}
)

func (x CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse) Enum() *CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse {
	p := new(CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[6].Descriptor()
}

func (CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[6]
}

func (x CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse.Descriptor instead.
func (CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{12, 0}
}

type CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse int32

const (
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eInternalError       CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 0
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eSuccess             CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 1
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eTooBusy             CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 2
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eDisabled            CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 3
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eTimeout             CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 4
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eAlreadyInSession    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 5
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eBehaviorScoreTooLow CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 6
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eInvalidLobbyType    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 7
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eLowPriorityPlayer   CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 8
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eLowPriorityLobby    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 9
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eLowPriorityParty    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 10
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eTextChatBan         CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 11
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eVoiceChatBan        CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 12
	CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eMatchBan            CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse = 13
)

// Enum value maps for CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse.
var (
	CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eTooBusy",
		3:  "k_eDisabled",
		4:  "k_eTimeout",
		5:  "k_eAlreadyInSession",
		6:  "k_eBehaviorScoreTooLow",
		7:  "k_eInvalidLobbyType",
		8:  "k_eLowPriorityPlayer",
		9:  "k_eLowPriorityLobby",
		10: "k_eLowPriorityParty",
		11: "k_eTextChatBan",
		12: "k_eVoiceChatBan",
		13: "k_eMatchBan",
	}
	CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_value = map[string]int32{
		"k_eInternalError":       0,
		"k_eSuccess":             1,
		"k_eTooBusy":             2,
		"k_eDisabled":            3,
		"k_eTimeout":             4,
		"k_eAlreadyInSession":    5,
		"k_eBehaviorScoreTooLow": 6,
		"k_eInvalidLobbyType":    7,
		"k_eLowPriorityPlayer":   8,
		"k_eLowPriorityLobby":    9,
		"k_eLowPriorityParty":    10,
		"k_eTextChatBan":         11,
		"k_eVoiceChatBan":        12,
		"k_eMatchBan":            13,
	}
)

func (x CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse) Enum() *CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse {
	p := new(CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[7].Descriptor()
}

func (CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[7]
}

func (x CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse.Descriptor instead.
func (CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{15, 0}
}

type CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse int32

const (
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eInternalError            CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 0
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eSuccess                  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 1
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eTooBusy                  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 2
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eDisabled                 CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 3
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eTimeout                  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 4
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eUnknownSession           CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 5
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eAlreadyHasCoach          CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 6
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eAlreadyHasSession        CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 7
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eInvalidUser              CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 8
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eAlreadyFinished          CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 9
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eInvalidLobbyType         CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 10
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eAlreadyInLobby           CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 11
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eLobbyIsLan               CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 12
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eLobbyIsLeague            CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 13
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eInvalidLobbyState        CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 14
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eRequesterIsNotPlayer     CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 15
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eTooManyCoaches           CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 16
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eCoachWasPlayer           CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 17
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eCoachBehaviorScoreTooLow CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 18
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eCoachRankNotCalibrated   CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 19
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eCoachRankNotEligible     CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 20
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eCoachRankTooLow          CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse = 21
)

// Enum value maps for CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse.
var (
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eTooBusy",
		3:  "k_eDisabled",
		4:  "k_eTimeout",
		5:  "k_eUnknownSession",
		6:  "k_eAlreadyHasCoach",
		7:  "k_eAlreadyHasSession",
		8:  "k_eInvalidUser",
		9:  "k_eAlreadyFinished",
		10: "k_eInvalidLobbyType",
		11: "k_eAlreadyInLobby",
		12: "k_eLobbyIsLan",
		13: "k_eLobbyIsLeague",
		14: "k_eInvalidLobbyState",
		15: "k_eRequesterIsNotPlayer",
		16: "k_eTooManyCoaches",
		17: "k_eCoachWasPlayer",
		18: "k_eCoachBehaviorScoreTooLow",
		19: "k_eCoachRankNotCalibrated",
		20: "k_eCoachRankNotEligible",
		21: "k_eCoachRankTooLow",
	}
	CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_value = map[string]int32{
		"k_eInternalError":            0,
		"k_eSuccess":                  1,
		"k_eTooBusy":                  2,
		"k_eDisabled":                 3,
		"k_eTimeout":                  4,
		"k_eUnknownSession":           5,
		"k_eAlreadyHasCoach":          6,
		"k_eAlreadyHasSession":        7,
		"k_eInvalidUser":              8,
		"k_eAlreadyFinished":          9,
		"k_eInvalidLobbyType":         10,
		"k_eAlreadyInLobby":           11,
		"k_eLobbyIsLan":               12,
		"k_eLobbyIsLeague":            13,
		"k_eInvalidLobbyState":        14,
		"k_eRequesterIsNotPlayer":     15,
		"k_eTooManyCoaches":           16,
		"k_eCoachWasPlayer":           17,
		"k_eCoachBehaviorScoreTooLow": 18,
		"k_eCoachRankNotCalibrated":   19,
		"k_eCoachRankNotEligible":     20,
		"k_eCoachRankTooLow":          21,
	}
)

func (x CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse) Enum() *CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse {
	p := new(CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[8].Descriptor()
}

func (CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[8]
}

func (x CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse.Descriptor instead.
func (CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{17, 0}
}

type CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse int32

const (
	CMsgClientToGCLeavePrivateCoachingSessionResponse_k_eInternalError CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse = 0
	CMsgClientToGCLeavePrivateCoachingSessionResponse_k_eSuccess       CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse = 1
	CMsgClientToGCLeavePrivateCoachingSessionResponse_k_eTooBusy       CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse = 2
	CMsgClientToGCLeavePrivateCoachingSessionResponse_k_eDisabled      CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse = 3
	CMsgClientToGCLeavePrivateCoachingSessionResponse_k_eTimeout       CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse = 4
	CMsgClientToGCLeavePrivateCoachingSessionResponse_k_eNoSession     CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse = 5
	CMsgClientToGCLeavePrivateCoachingSessionResponse_k_eAlreadyLeft   CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse = 6
)

// Enum value maps for CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse.
var (
	CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoSession",
		6: "k_eAlreadyLeft",
	}
	CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eNoSession":     5,
		"k_eAlreadyLeft":   6,
	}
)

func (x CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse) Enum() *CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse {
	p := new(CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[9].Descriptor()
}

func (CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[9]
}

func (x CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse.Descriptor instead.
func (CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{19, 0}
}

type CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse int32

const (
	CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_k_eInternalError CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse = 0
	CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_k_eSuccess       CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse = 1
	CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_k_eTooBusy       CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse = 2
	CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_k_eDisabled      CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse = 3
	CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_k_eTimeout       CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse = 4
)

// Enum value maps for CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse.
var (
	CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
	}
	CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
	}
)

func (x CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse) Enum() *CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse {
	p := new(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[10].Descriptor()
}

func (CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[10]
}

func (x CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse.Descriptor instead.
func (CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{21, 0}
}

type CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse int32

const (
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eInternalError    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 0
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eSuccess          CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 1
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eTooBusy          CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 2
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eDisabled         CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 3
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eTimeout          CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 4
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eUnknownSession   CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 5
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eNotMember        CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 6
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eAlreadySubmitted CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 7
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eSessionActive    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 8
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eSessionTooShort  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 9
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eNoCoach          CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 10
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eInvalidRating    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse = 11
)

// Enum value maps for CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse.
var (
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eTooBusy",
		3:  "k_eDisabled",
		4:  "k_eTimeout",
		5:  "k_eUnknownSession",
		6:  "k_eNotMember",
		7:  "k_eAlreadySubmitted",
		8:  "k_eSessionActive",
		9:  "k_eSessionTooShort",
		10: "k_eNoCoach",
		11: "k_eInvalidRating",
	}
	CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_value = map[string]int32{
		"k_eInternalError":    0,
		"k_eSuccess":          1,
		"k_eTooBusy":          2,
		"k_eDisabled":         3,
		"k_eTimeout":          4,
		"k_eUnknownSession":   5,
		"k_eNotMember":        6,
		"k_eAlreadySubmitted": 7,
		"k_eSessionActive":    8,
		"k_eSessionTooShort":  9,
		"k_eNoCoach":          10,
		"k_eInvalidRating":    11,
	}
)

func (x CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse) Enum() *CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse {
	p := new(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[11].Descriptor()
}

func (CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[11]
}

func (x CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse.Descriptor instead.
func (CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{24, 0}
}

type CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse int32

const (
	CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_k_eInternalError CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse = 0
	CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_k_eSuccess       CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse = 1
	CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_k_eTooBusy       CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse = 2
	CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_k_eDisabled      CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse = 3
	CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_k_eTimeout       CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse = 4
)

// Enum value maps for CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse.
var (
	CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
	}
	CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
	}
)

func (x CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse) Enum() *CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse {
	p := new(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[12].Descriptor()
}

func (CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[12]
}

func (x CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse.Descriptor instead.
func (CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{26, 0}
}

type CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse int32

const (
	CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_k_eInternalError CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse = 0
	CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_k_eSuccess       CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse = 1
	CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_k_eTooBusy       CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse = 2
	CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_k_eDisabled      CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse = 3
	CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_k_eTimeout       CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse = 4
)

// Enum value maps for CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse.
var (
	CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
	}
	CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
	}
)

func (x CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse) Enum() *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse {
	p := new(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[13].Descriptor()
}

func (CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[13]
}

func (x CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse.Descriptor instead.
func (CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{28, 0}
}

type CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse int32

const (
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eInternalError        CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 0
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eSuccess              CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 1
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eTooBusy              CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 2
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eDisabled             CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 3
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eTimeout              CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 4
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eNoSession            CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 5
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eSessionFinished      CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 6
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eAlreadyLeft          CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 7
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eNotACoach            CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 8
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eNoLobby              CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 9
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eCoachInThisLobby     CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 10
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eCoachInALobby        CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 11
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eLobbyIsLan           CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 12
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eLobbyIsLeague        CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 13
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eInvalidLobbyType     CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 14
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eInvalidLobbyState    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 15
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eRequesterIsNotPlayer CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 16
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eTooManyCoaches       CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 17
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eCoachWasPlayer       CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 18
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eJoinFailed           CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse = 19
)

// Enum value maps for CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse.
var (
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eTooBusy",
		3:  "k_eDisabled",
		4:  "k_eTimeout",
		5:  "k_eNoSession",
		6:  "k_eSessionFinished",
		7:  "k_eAlreadyLeft",
		8:  "k_eNotACoach",
		9:  "k_eNoLobby",
		10: "k_eCoachInThisLobby",
		11: "k_eCoachInALobby",
		12: "k_eLobbyIsLan",
		13: "k_eLobbyIsLeague",
		14: "k_eInvalidLobbyType",
		15: "k_eInvalidLobbyState",
		16: "k_eRequesterIsNotPlayer",
		17: "k_eTooManyCoaches",
		18: "k_eCoachWasPlayer",
		19: "k_eJoinFailed",
	}
	CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_value = map[string]int32{
		"k_eInternalError":        0,
		"k_eSuccess":              1,
		"k_eTooBusy":              2,
		"k_eDisabled":             3,
		"k_eTimeout":              4,
		"k_eNoSession":            5,
		"k_eSessionFinished":      6,
		"k_eAlreadyLeft":          7,
		"k_eNotACoach":            8,
		"k_eNoLobby":              9,
		"k_eCoachInThisLobby":     10,
		"k_eCoachInALobby":        11,
		"k_eLobbyIsLan":           12,
		"k_eLobbyIsLeague":        13,
		"k_eInvalidLobbyType":     14,
		"k_eInvalidLobbyState":    15,
		"k_eRequesterIsNotPlayer": 16,
		"k_eTooManyCoaches":       17,
		"k_eCoachWasPlayer":       18,
		"k_eJoinFailed":           19,
	}
)

func (x CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse) Enum() *CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse {
	p := new(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[14].Descriptor()
}

func (CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[14]
}

func (x CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse.Descriptor instead.
func (CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{30, 0}
}

type CMsgClientToGCCoachFriendResponse_EResponse int32

const (
	CMsgClientToGCCoachFriendResponse_k_eInternalError      CMsgClientToGCCoachFriendResponse_EResponse = 0
	CMsgClientToGCCoachFriendResponse_k_eSuccess            CMsgClientToGCCoachFriendResponse_EResponse = 1
	CMsgClientToGCCoachFriendResponse_k_eTooBusy            CMsgClientToGCCoachFriendResponse_EResponse = 2
	CMsgClientToGCCoachFriendResponse_k_eDisabled           CMsgClientToGCCoachFriendResponse_EResponse = 3
	CMsgClientToGCCoachFriendResponse_k_eTimeout            CMsgClientToGCCoachFriendResponse_EResponse = 4
	CMsgClientToGCCoachFriendResponse_k_eCoachNotSubscriber CMsgClientToGCCoachFriendResponse_EResponse = 5
	CMsgClientToGCCoachFriendResponse_k_eLobbyNotFound      CMsgClientToGCCoachFriendResponse_EResponse = 6
	CMsgClientToGCCoachFriendResponse_k_eFriendsOnBothSides CMsgClientToGCCoachFriendResponse_EResponse = 7
	CMsgClientToGCCoachFriendResponse_k_eNotFriends         CMsgClientToGCCoachFriendResponse_EResponse = 8
	CMsgClientToGCCoachFriendResponse_k_eCoachInThisLobby   CMsgClientToGCCoachFriendResponse_EResponse = 9
	CMsgClientToGCCoachFriendResponse_k_eCoachInALobby      CMsgClientToGCCoachFriendResponse_EResponse = 10
	CMsgClientToGCCoachFriendResponse_k_eLobbyIsLan         CMsgClientToGCCoachFriendResponse_EResponse = 11
	CMsgClientToGCCoachFriendResponse_k_eInvalidLobbyType   CMsgClientToGCCoachFriendResponse_EResponse = 12
	CMsgClientToGCCoachFriendResponse_k_eInvalidLobbyState  CMsgClientToGCCoachFriendResponse_EResponse = 13
	CMsgClientToGCCoachFriendResponse_k_eFriendIsNotAPlayer CMsgClientToGCCoachFriendResponse_EResponse = 14
	CMsgClientToGCCoachFriendResponse_k_eTooManyCoaches     CMsgClientToGCCoachFriendResponse_EResponse = 15
	CMsgClientToGCCoachFriendResponse_k_eCoachSwitchedTeams CMsgClientToGCCoachFriendResponse_EResponse = 16
	CMsgClientToGCCoachFriendResponse_k_eLobbyIsLeague      CMsgClientToGCCoachFriendResponse_EResponse = 17
	CMsgClientToGCCoachFriendResponse_k_eCoachWasPlayer     CMsgClientToGCCoachFriendResponse_EResponse = 18
	CMsgClientToGCCoachFriendResponse_k_eRequestRejected    CMsgClientToGCCoachFriendResponse_EResponse = 19
)

// Enum value maps for CMsgClientToGCCoachFriendResponse_EResponse.
var (
	CMsgClientToGCCoachFriendResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eTooBusy",
		3:  "k_eDisabled",
		4:  "k_eTimeout",
		5:  "k_eCoachNotSubscriber",
		6:  "k_eLobbyNotFound",
		7:  "k_eFriendsOnBothSides",
		8:  "k_eNotFriends",
		9:  "k_eCoachInThisLobby",
		10: "k_eCoachInALobby",
		11: "k_eLobbyIsLan",
		12: "k_eInvalidLobbyType",
		13: "k_eInvalidLobbyState",
		14: "k_eFriendIsNotAPlayer",
		15: "k_eTooManyCoaches",
		16: "k_eCoachSwitchedTeams",
		17: "k_eLobbyIsLeague",
		18: "k_eCoachWasPlayer",
		19: "k_eRequestRejected",
	}
	CMsgClientToGCCoachFriendResponse_EResponse_value = map[string]int32{
		"k_eInternalError":      0,
		"k_eSuccess":            1,
		"k_eTooBusy":            2,
		"k_eDisabled":           3,
		"k_eTimeout":            4,
		"k_eCoachNotSubscriber": 5,
		"k_eLobbyNotFound":      6,
		"k_eFriendsOnBothSides": 7,
		"k_eNotFriends":         8,
		"k_eCoachInThisLobby":   9,
		"k_eCoachInALobby":      10,
		"k_eLobbyIsLan":         11,
		"k_eInvalidLobbyType":   12,
		"k_eInvalidLobbyState":  13,
		"k_eFriendIsNotAPlayer": 14,
		"k_eTooManyCoaches":     15,
		"k_eCoachSwitchedTeams": 16,
		"k_eLobbyIsLeague":      17,
		"k_eCoachWasPlayer":     18,
		"k_eRequestRejected":    19,
	}
)

func (x CMsgClientToGCCoachFriendResponse_EResponse) Enum() *CMsgClientToGCCoachFriendResponse_EResponse {
	p := new(CMsgClientToGCCoachFriendResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCCoachFriendResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCCoachFriendResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[15].Descriptor()
}

func (CMsgClientToGCCoachFriendResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[15]
}

func (x CMsgClientToGCCoachFriendResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCCoachFriendResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCCoachFriendResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCCoachFriendResponse_EResponse.Descriptor instead.
func (CMsgClientToGCCoachFriendResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{32, 0}
}

type CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse int32

const (
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eInternalError     CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 0
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eSuccess           CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 1
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eTooBusy           CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 2
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eDisabled          CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 3
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eTimeout           CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 4
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eLobbyNotFound     CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 5
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eInvalidLobbyState CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 6
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eCoachNotInLobby   CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 7
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_ePlayerInvalidTeam CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 8
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eCoachInvalidTeam  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 9
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eNoRequest         CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 10
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eInvalidResponse   CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 11
	CMsgClientToGCRespondToCoachFriendRequestResponse_k_eAlreadyResponded  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse = 12
)

// Enum value maps for CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse.
var (
	CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eTooBusy",
		3:  "k_eDisabled",
		4:  "k_eTimeout",
		5:  "k_eLobbyNotFound",
		6:  "k_eInvalidLobbyState",
		7:  "k_eCoachNotInLobby",
		8:  "k_ePlayerInvalidTeam",
		9:  "k_eCoachInvalidTeam",
		10: "k_eNoRequest",
		11: "k_eInvalidResponse",
		12: "k_eAlreadyResponded",
	}
	CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_value = map[string]int32{
		"k_eInternalError":     0,
		"k_eSuccess":           1,
		"k_eTooBusy":           2,
		"k_eDisabled":          3,
		"k_eTimeout":           4,
		"k_eLobbyNotFound":     5,
		"k_eInvalidLobbyState": 6,
		"k_eCoachNotInLobby":   7,
		"k_ePlayerInvalidTeam": 8,
		"k_eCoachInvalidTeam":  9,
		"k_eNoRequest":         10,
		"k_eInvalidResponse":   11,
		"k_eAlreadyResponded":  12,
	}
)

func (x CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse) Enum() *CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse {
	p := new(CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_coaching_proto_enumTypes[16].Descriptor()
}

func (CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_coaching_proto_enumTypes[16]
}

func (x CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse.Descriptor instead.
func (CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{34, 0}
}

type CMsgPlayerCoachMatch struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MatchId         *uint64                `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	MatchOutcome    *EMatchOutcome         `protobuf:"varint,2,opt,name=match_outcome,json=matchOutcome,enum=protocol.EMatchOutcome,def=0" json:"match_outcome,omitempty"`
	CoachedTeam     *uint32                `protobuf:"varint,3,opt,name=coached_team,json=coachedTeam" json:"coached_team,omitempty"`
	StartTime       *uint32                `protobuf:"fixed32,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Duration        *uint32                `protobuf:"varint,5,opt,name=duration" json:"duration,omitempty"`
	TeammateRatings []ECoachTeammateRating `protobuf:"varint,6,rep,name=teammate_ratings,json=teammateRatings,enum=protocol.ECoachTeammateRating" json:"teammate_ratings,omitempty"`
	CoachFlags      *uint32                `protobuf:"varint,7,opt,name=coach_flags,json=coachFlags" json:"coach_flags,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CMsgPlayerCoachMatch fields.
const (
	Default_CMsgPlayerCoachMatch_MatchOutcome = EMatchOutcome_k_EMatchOutcome_Unknown
)

func (x *CMsgPlayerCoachMatch) Reset() {
	*x = CMsgPlayerCoachMatch{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPlayerCoachMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPlayerCoachMatch) ProtoMessage() {}

func (x *CMsgPlayerCoachMatch) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPlayerCoachMatch.ProtoReflect.Descriptor instead.
func (*CMsgPlayerCoachMatch) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgPlayerCoachMatch) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

func (x *CMsgPlayerCoachMatch) GetMatchOutcome() EMatchOutcome {
	if x != nil && x.MatchOutcome != nil {
		return *x.MatchOutcome
	}
	return Default_CMsgPlayerCoachMatch_MatchOutcome
}

func (x *CMsgPlayerCoachMatch) GetCoachedTeam() uint32 {
	if x != nil && x.CoachedTeam != nil {
		return *x.CoachedTeam
	}
	return 0
}

func (x *CMsgPlayerCoachMatch) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CMsgPlayerCoachMatch) GetDuration() uint32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CMsgPlayerCoachMatch) GetTeammateRatings() []ECoachTeammateRating {
	if x != nil {
		return x.TeammateRatings
	}
	return nil
}

func (x *CMsgPlayerCoachMatch) GetCoachFlags() uint32 {
	if x != nil && x.CoachFlags != nil {
		return *x.CoachFlags
	}
	return 0
}

type CMsgPrivateCoachingSessionMember struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AccountId           *uint32                `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MemberFlags         *uint32                `protobuf:"varint,2,opt,name=member_flags,json=memberFlags" json:"member_flags,omitempty"`
	MemberSessionRating *ECoachTeammateRating  `protobuf:"varint,3,opt,name=member_session_rating,json=memberSessionRating,enum=protocol.ECoachTeammateRating,def=0" json:"member_session_rating,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for CMsgPrivateCoachingSessionMember fields.
const (
	Default_CMsgPrivateCoachingSessionMember_MemberSessionRating = ECoachTeammateRating_k_ECoachTeammateRating_None
)

func (x *CMsgPrivateCoachingSessionMember) Reset() {
	*x = CMsgPrivateCoachingSessionMember{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPrivateCoachingSessionMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPrivateCoachingSessionMember) ProtoMessage() {}

func (x *CMsgPrivateCoachingSessionMember) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPrivateCoachingSessionMember.ProtoReflect.Descriptor instead.
func (*CMsgPrivateCoachingSessionMember) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgPrivateCoachingSessionMember) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgPrivateCoachingSessionMember) GetMemberFlags() uint32 {
	if x != nil && x.MemberFlags != nil {
		return *x.MemberFlags
	}
	return 0
}

func (x *CMsgPrivateCoachingSessionMember) GetMemberSessionRating() ECoachTeammateRating {
	if x != nil && x.MemberSessionRating != nil {
		return *x.MemberSessionRating
	}
	return Default_CMsgPrivateCoachingSessionMember_MemberSessionRating
}

type CMsgPrivateCoachingSession struct {
	state                    protoimpl.MessageState              `protogen:"open.v1"`
	PrivateCoachingSessionId *uint64                             `protobuf:"varint,1,opt,name=private_coaching_session_id,json=privateCoachingSessionId" json:"private_coaching_session_id,omitempty"`
	RequestedTimestamp       *uint32                             `protobuf:"fixed32,2,opt,name=requested_timestamp,json=requestedTimestamp" json:"requested_timestamp,omitempty"`
	RequestedLanguage        *uint32                             `protobuf:"varint,3,opt,name=requested_language,json=requestedLanguage" json:"requested_language,omitempty"`
	CoachingSessionState     *EPrivateCoachingSessionState       `protobuf:"varint,4,opt,name=coaching_session_state,json=coachingSessionState,enum=protocol.EPrivateCoachingSessionState,def=0" json:"coaching_session_state,omitempty"`
	SessionMembers           []*CMsgPrivateCoachingSessionMember `protobuf:"bytes,5,rep,name=session_members,json=sessionMembers" json:"session_members,omitempty"`
	CurrentLobbyId           *uint64                             `protobuf:"varint,6,opt,name=current_lobby_id,json=currentLobbyId" json:"current_lobby_id,omitempty"`
	CurrentServerSteamId     *uint64                             `protobuf:"varint,7,opt,name=current_server_steam_id,json=currentServerSteamId" json:"current_server_steam_id,omitempty"`
	AcceptedTimestamp        *uint32                             `protobuf:"fixed32,8,opt,name=accepted_timestamp,json=acceptedTimestamp" json:"accepted_timestamp,omitempty"`
	CompletedTimestamp       *uint32                             `protobuf:"fixed32,9,opt,name=completed_timestamp,json=completedTimestamp" json:"completed_timestamp,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

// Default values for CMsgPrivateCoachingSession fields.
const (
	Default_CMsgPrivateCoachingSession_CoachingSessionState = EPrivateCoachingSessionState_k_ePrivateCoachingSessionState_Invalid
)

func (x *CMsgPrivateCoachingSession) Reset() {
	*x = CMsgPrivateCoachingSession{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPrivateCoachingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPrivateCoachingSession) ProtoMessage() {}

func (x *CMsgPrivateCoachingSession) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPrivateCoachingSession.ProtoReflect.Descriptor instead.
func (*CMsgPrivateCoachingSession) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgPrivateCoachingSession) GetPrivateCoachingSessionId() uint64 {
	if x != nil && x.PrivateCoachingSessionId != nil {
		return *x.PrivateCoachingSessionId
	}
	return 0
}

func (x *CMsgPrivateCoachingSession) GetRequestedTimestamp() uint32 {
	if x != nil && x.RequestedTimestamp != nil {
		return *x.RequestedTimestamp
	}
	return 0
}

func (x *CMsgPrivateCoachingSession) GetRequestedLanguage() uint32 {
	if x != nil && x.RequestedLanguage != nil {
		return *x.RequestedLanguage
	}
	return 0
}

func (x *CMsgPrivateCoachingSession) GetCoachingSessionState() EPrivateCoachingSessionState {
	if x != nil && x.CoachingSessionState != nil {
		return *x.CoachingSessionState
	}
	return Default_CMsgPrivateCoachingSession_CoachingSessionState
}

func (x *CMsgPrivateCoachingSession) GetSessionMembers() []*CMsgPrivateCoachingSessionMember {
	if x != nil {
		return x.SessionMembers
	}
	return nil
}

func (x *CMsgPrivateCoachingSession) GetCurrentLobbyId() uint64 {
	if x != nil && x.CurrentLobbyId != nil {
		return *x.CurrentLobbyId
	}
	return 0
}

func (x *CMsgPrivateCoachingSession) GetCurrentServerSteamId() uint64 {
	if x != nil && x.CurrentServerSteamId != nil {
		return *x.CurrentServerSteamId
	}
	return 0
}

func (x *CMsgPrivateCoachingSession) GetAcceptedTimestamp() uint32 {
	if x != nil && x.AcceptedTimestamp != nil {
		return *x.AcceptedTimestamp
	}
	return 0
}

func (x *CMsgPrivateCoachingSession) GetCompletedTimestamp() uint32 {
	if x != nil && x.CompletedTimestamp != nil {
		return *x.CompletedTimestamp
	}
	return 0
}

type CMsgPrivateCoachingSessionStatus struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	RequesterCompetitiveRankTier *uint32                `protobuf:"varint,1,opt,name=requester_competitive_rank_tier,json=requesterCompetitiveRankTier" json:"requester_competitive_rank_tier,omitempty"`
	RequesterGamesPlayed         *uint32                `protobuf:"varint,2,opt,name=requester_games_played,json=requesterGamesPlayed" json:"requester_games_played,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *CMsgPrivateCoachingSessionStatus) Reset() {
	*x = CMsgPrivateCoachingSessionStatus{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPrivateCoachingSessionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPrivateCoachingSessionStatus) ProtoMessage() {}

func (x *CMsgPrivateCoachingSessionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPrivateCoachingSessionStatus.ProtoReflect.Descriptor instead.
func (*CMsgPrivateCoachingSessionStatus) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgPrivateCoachingSessionStatus) GetRequesterCompetitiveRankTier() uint32 {
	if x != nil && x.RequesterCompetitiveRankTier != nil {
		return *x.RequesterCompetitiveRankTier
	}
	return 0
}

func (x *CMsgPrivateCoachingSessionStatus) GetRequesterGamesPlayed() uint32 {
	if x != nil && x.RequesterGamesPlayed != nil {
		return *x.RequesterGamesPlayed
	}
	return 0
}

type CMsgAvailablePrivateCoachingSession struct {
	state                 protoimpl.MessageState            `protogen:"open.v1"`
	CoachingSession       *CMsgPrivateCoachingSession       `protobuf:"bytes,1,opt,name=coaching_session,json=coachingSession" json:"coaching_session,omitempty"`
	CoachingSessionStatus *CMsgPrivateCoachingSessionStatus `protobuf:"bytes,2,opt,name=coaching_session_status,json=coachingSessionStatus" json:"coaching_session_status,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CMsgAvailablePrivateCoachingSession) Reset() {
	*x = CMsgAvailablePrivateCoachingSession{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgAvailablePrivateCoachingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAvailablePrivateCoachingSession) ProtoMessage() {}

func (x *CMsgAvailablePrivateCoachingSession) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAvailablePrivateCoachingSession.ProtoReflect.Descriptor instead.
func (*CMsgAvailablePrivateCoachingSession) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgAvailablePrivateCoachingSession) GetCoachingSession() *CMsgPrivateCoachingSession {
	if x != nil {
		return x.CoachingSession
	}
	return nil
}

func (x *CMsgAvailablePrivateCoachingSession) GetCoachingSessionStatus() *CMsgPrivateCoachingSessionStatus {
	if x != nil {
		return x.CoachingSessionStatus
	}
	return nil
}

type CMsgAvailablePrivateCoachingSessionList struct {
	state                     protoimpl.MessageState                 `protogen:"open.v1"`
	AvailableCoachingSessions []*CMsgAvailablePrivateCoachingSession `protobuf:"bytes,1,rep,name=available_coaching_sessions,json=availableCoachingSessions" json:"available_coaching_sessions,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CMsgAvailablePrivateCoachingSessionList) Reset() {
	*x = CMsgAvailablePrivateCoachingSessionList{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgAvailablePrivateCoachingSessionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAvailablePrivateCoachingSessionList) ProtoMessage() {}

func (x *CMsgAvailablePrivateCoachingSessionList) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAvailablePrivateCoachingSessionList.ProtoReflect.Descriptor instead.
func (*CMsgAvailablePrivateCoachingSessionList) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgAvailablePrivateCoachingSessionList) GetAvailableCoachingSessions() []*CMsgAvailablePrivateCoachingSession {
	if x != nil {
		return x.AvailableCoachingSessions
	}
	return nil
}

type CMsgAvailablePrivateCoachingSessionSummary struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CoachingSessionCount *uint32                `protobuf:"varint,1,opt,name=coaching_session_count,json=coachingSessionCount" json:"coaching_session_count,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CMsgAvailablePrivateCoachingSessionSummary) Reset() {
	*x = CMsgAvailablePrivateCoachingSessionSummary{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgAvailablePrivateCoachingSessionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAvailablePrivateCoachingSessionSummary) ProtoMessage() {}

func (x *CMsgAvailablePrivateCoachingSessionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAvailablePrivateCoachingSessionSummary.ProtoReflect.Descriptor instead.
func (*CMsgAvailablePrivateCoachingSessionSummary) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgAvailablePrivateCoachingSessionSummary) GetCoachingSessionCount() uint32 {
	if x != nil && x.CoachingSessionCount != nil {
		return *x.CoachingSessionCount
	}
	return 0
}

type CMsgClientToGCRequestPlayerCoachMatches struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCRequestPlayerCoachMatches) Reset() {
	*x = CMsgClientToGCRequestPlayerCoachMatches{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCRequestPlayerCoachMatches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRequestPlayerCoachMatches) ProtoMessage() {}

func (x *CMsgClientToGCRequestPlayerCoachMatches) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRequestPlayerCoachMatches.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRequestPlayerCoachMatches) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{7}
}

type CMsgClientToGCRequestPlayerCoachMatchesResponse struct {
	state         protoimpl.MessageState                                     `protogen:"open.v1"`
	Result        *CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse,def=0" json:"result,omitempty"`
	CoachMatches  []*CMsgPlayerCoachMatch                                    `protobuf:"bytes,2,rep,name=coach_matches,json=coachMatches" json:"coach_matches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCRequestPlayerCoachMatchesResponse fields.
const (
	Default_CMsgClientToGCRequestPlayerCoachMatchesResponse_Result = CMsgClientToGCRequestPlayerCoachMatchesResponse_k_eInternalError
)

func (x *CMsgClientToGCRequestPlayerCoachMatchesResponse) Reset() {
	*x = CMsgClientToGCRequestPlayerCoachMatchesResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCRequestPlayerCoachMatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRequestPlayerCoachMatchesResponse) ProtoMessage() {}

func (x *CMsgClientToGCRequestPlayerCoachMatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRequestPlayerCoachMatchesResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRequestPlayerCoachMatchesResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgClientToGCRequestPlayerCoachMatchesResponse) GetResult() CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCRequestPlayerCoachMatchesResponse_Result
}

func (x *CMsgClientToGCRequestPlayerCoachMatchesResponse) GetCoachMatches() []*CMsgPlayerCoachMatch {
	if x != nil {
		return x.CoachMatches
	}
	return nil
}

type CMsgClientToGCRequestPlayerCoachMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       *uint64                `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCRequestPlayerCoachMatch) Reset() {
	*x = CMsgClientToGCRequestPlayerCoachMatch{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCRequestPlayerCoachMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRequestPlayerCoachMatch) ProtoMessage() {}

func (x *CMsgClientToGCRequestPlayerCoachMatch) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRequestPlayerCoachMatch.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRequestPlayerCoachMatch) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgClientToGCRequestPlayerCoachMatch) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

type CMsgClientToGCRequestPlayerCoachMatchResponse struct {
	state         protoimpl.MessageState                                   `protogen:"open.v1"`
	Result        *CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse,def=0" json:"result,omitempty"`
	CoachMatch    *CMsgPlayerCoachMatch                                    `protobuf:"bytes,2,opt,name=coach_match,json=coachMatch" json:"coach_match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCRequestPlayerCoachMatchResponse fields.
const (
	Default_CMsgClientToGCRequestPlayerCoachMatchResponse_Result = CMsgClientToGCRequestPlayerCoachMatchResponse_k_eInternalError
)

func (x *CMsgClientToGCRequestPlayerCoachMatchResponse) Reset() {
	*x = CMsgClientToGCRequestPlayerCoachMatchResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCRequestPlayerCoachMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRequestPlayerCoachMatchResponse) ProtoMessage() {}

func (x *CMsgClientToGCRequestPlayerCoachMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRequestPlayerCoachMatchResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRequestPlayerCoachMatchResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgClientToGCRequestPlayerCoachMatchResponse) GetResult() CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCRequestPlayerCoachMatchResponse_Result
}

func (x *CMsgClientToGCRequestPlayerCoachMatchResponse) GetCoachMatch() *CMsgPlayerCoachMatch {
	if x != nil {
		return x.CoachMatch
	}
	return nil
}

type CMsgClientToGCSubmitCoachTeammateRating struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MatchId        *uint64                `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	CoachAccountId *uint32                `protobuf:"varint,2,opt,name=coach_account_id,json=coachAccountId" json:"coach_account_id,omitempty"`
	Rating         *ECoachTeammateRating  `protobuf:"varint,3,opt,name=rating,enum=protocol.ECoachTeammateRating,def=0" json:"rating,omitempty"`
	Reason         *string                `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CMsgClientToGCSubmitCoachTeammateRating fields.
const (
	Default_CMsgClientToGCSubmitCoachTeammateRating_Rating = ECoachTeammateRating_k_ECoachTeammateRating_None
)

func (x *CMsgClientToGCSubmitCoachTeammateRating) Reset() {
	*x = CMsgClientToGCSubmitCoachTeammateRating{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCSubmitCoachTeammateRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSubmitCoachTeammateRating) ProtoMessage() {}

func (x *CMsgClientToGCSubmitCoachTeammateRating) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSubmitCoachTeammateRating.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSubmitCoachTeammateRating) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgClientToGCSubmitCoachTeammateRating) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

func (x *CMsgClientToGCSubmitCoachTeammateRating) GetCoachAccountId() uint32 {
	if x != nil && x.CoachAccountId != nil {
		return *x.CoachAccountId
	}
	return 0
}

func (x *CMsgClientToGCSubmitCoachTeammateRating) GetRating() ECoachTeammateRating {
	if x != nil && x.Rating != nil {
		return *x.Rating
	}
	return Default_CMsgClientToGCSubmitCoachTeammateRating_Rating
}

func (x *CMsgClientToGCSubmitCoachTeammateRating) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

type CMsgClientToGCSubmitCoachTeammateRatingResponse struct {
	state         protoimpl.MessageState                                     `protogen:"open.v1"`
	Result        *CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse,def=0" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCSubmitCoachTeammateRatingResponse fields.
const (
	Default_CMsgClientToGCSubmitCoachTeammateRatingResponse_Result = CMsgClientToGCSubmitCoachTeammateRatingResponse_k_eInternalError
)

func (x *CMsgClientToGCSubmitCoachTeammateRatingResponse) Reset() {
	*x = CMsgClientToGCSubmitCoachTeammateRatingResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCSubmitCoachTeammateRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSubmitCoachTeammateRatingResponse) ProtoMessage() {}

func (x *CMsgClientToGCSubmitCoachTeammateRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSubmitCoachTeammateRatingResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSubmitCoachTeammateRatingResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgClientToGCSubmitCoachTeammateRatingResponse) GetResult() CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCSubmitCoachTeammateRatingResponse_Result
}

type CMsgGCToClientCoachTeammateRatingsChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CoachMatch    *CMsgPlayerCoachMatch  `protobuf:"bytes,1,opt,name=coach_match,json=coachMatch" json:"coach_match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCToClientCoachTeammateRatingsChanged) Reset() {
	*x = CMsgGCToClientCoachTeammateRatingsChanged{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCToClientCoachTeammateRatingsChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientCoachTeammateRatingsChanged) ProtoMessage() {}

func (x *CMsgGCToClientCoachTeammateRatingsChanged) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientCoachTeammateRatingsChanged.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientCoachTeammateRatingsChanged) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgGCToClientCoachTeammateRatingsChanged) GetCoachMatch() *CMsgPlayerCoachMatch {
	if x != nil {
		return x.CoachMatch
	}
	return nil
}

type CMsgClientToGCRequestPrivateCoachingSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *uint32                `protobuf:"varint,1,opt,name=language" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCRequestPrivateCoachingSession) Reset() {
	*x = CMsgClientToGCRequestPrivateCoachingSession{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCRequestPrivateCoachingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRequestPrivateCoachingSession) ProtoMessage() {}

func (x *CMsgClientToGCRequestPrivateCoachingSession) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRequestPrivateCoachingSession.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRequestPrivateCoachingSession) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgClientToGCRequestPrivateCoachingSession) GetLanguage() uint32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

type CMsgClientToGCRequestPrivateCoachingSessionResponse struct {
	state           protoimpl.MessageState                                         `protogen:"open.v1"`
	Result          *CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse,def=0" json:"result,omitempty"`
	CoachingSession *CMsgPrivateCoachingSession                                    `protobuf:"bytes,2,opt,name=coaching_session,json=coachingSession" json:"coaching_session,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CMsgClientToGCRequestPrivateCoachingSessionResponse fields.
const (
	Default_CMsgClientToGCRequestPrivateCoachingSessionResponse_Result = CMsgClientToGCRequestPrivateCoachingSessionResponse_k_eInternalError
)

func (x *CMsgClientToGCRequestPrivateCoachingSessionResponse) Reset() {
	*x = CMsgClientToGCRequestPrivateCoachingSessionResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCRequestPrivateCoachingSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRequestPrivateCoachingSessionResponse) ProtoMessage() {}

func (x *CMsgClientToGCRequestPrivateCoachingSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRequestPrivateCoachingSessionResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRequestPrivateCoachingSessionResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgClientToGCRequestPrivateCoachingSessionResponse) GetResult() CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCRequestPrivateCoachingSessionResponse_Result
}

func (x *CMsgClientToGCRequestPrivateCoachingSessionResponse) GetCoachingSession() *CMsgPrivateCoachingSession {
	if x != nil {
		return x.CoachingSession
	}
	return nil
}

type CMsgClientToGCAcceptPrivateCoachingSession struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CoachingSessionId *uint64                `protobuf:"varint,1,opt,name=coaching_session_id,json=coachingSessionId" json:"coaching_session_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgClientToGCAcceptPrivateCoachingSession) Reset() {
	*x = CMsgClientToGCAcceptPrivateCoachingSession{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCAcceptPrivateCoachingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCAcceptPrivateCoachingSession) ProtoMessage() {}

func (x *CMsgClientToGCAcceptPrivateCoachingSession) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCAcceptPrivateCoachingSession.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCAcceptPrivateCoachingSession) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgClientToGCAcceptPrivateCoachingSession) GetCoachingSessionId() uint64 {
	if x != nil && x.CoachingSessionId != nil {
		return *x.CoachingSessionId
	}
	return 0
}

type CMsgClientToGCAcceptPrivateCoachingSessionResponse struct {
	state           protoimpl.MessageState                                        `protogen:"open.v1"`
	Result          *CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse,def=0" json:"result,omitempty"`
	CoachingSession *CMsgPrivateCoachingSession                                   `protobuf:"bytes,2,opt,name=coaching_session,json=coachingSession" json:"coaching_session,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CMsgClientToGCAcceptPrivateCoachingSessionResponse fields.
const (
	Default_CMsgClientToGCAcceptPrivateCoachingSessionResponse_Result = CMsgClientToGCAcceptPrivateCoachingSessionResponse_k_eInternalError
)

func (x *CMsgClientToGCAcceptPrivateCoachingSessionResponse) Reset() {
	*x = CMsgClientToGCAcceptPrivateCoachingSessionResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCAcceptPrivateCoachingSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCAcceptPrivateCoachingSessionResponse) ProtoMessage() {}

func (x *CMsgClientToGCAcceptPrivateCoachingSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCAcceptPrivateCoachingSessionResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCAcceptPrivateCoachingSessionResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgClientToGCAcceptPrivateCoachingSessionResponse) GetResult() CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCAcceptPrivateCoachingSessionResponse_Result
}

func (x *CMsgClientToGCAcceptPrivateCoachingSessionResponse) GetCoachingSession() *CMsgPrivateCoachingSession {
	if x != nil {
		return x.CoachingSession
	}
	return nil
}

type CMsgClientToGCLeavePrivateCoachingSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCLeavePrivateCoachingSession) Reset() {
	*x = CMsgClientToGCLeavePrivateCoachingSession{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCLeavePrivateCoachingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCLeavePrivateCoachingSession) ProtoMessage() {}

func (x *CMsgClientToGCLeavePrivateCoachingSession) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCLeavePrivateCoachingSession.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCLeavePrivateCoachingSession) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{18}
}

type CMsgClientToGCLeavePrivateCoachingSessionResponse struct {
	state         protoimpl.MessageState                                       `protogen:"open.v1"`
	Result        *CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse,def=0" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCLeavePrivateCoachingSessionResponse fields.
const (
	Default_CMsgClientToGCLeavePrivateCoachingSessionResponse_Result = CMsgClientToGCLeavePrivateCoachingSessionResponse_k_eInternalError
)

func (x *CMsgClientToGCLeavePrivateCoachingSessionResponse) Reset() {
	*x = CMsgClientToGCLeavePrivateCoachingSessionResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCLeavePrivateCoachingSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCLeavePrivateCoachingSessionResponse) ProtoMessage() {}

func (x *CMsgClientToGCLeavePrivateCoachingSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCLeavePrivateCoachingSessionResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCLeavePrivateCoachingSessionResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgClientToGCLeavePrivateCoachingSessionResponse) GetResult() CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCLeavePrivateCoachingSessionResponse_Result
}

type CMsgClientToGCGetCurrentPrivateCoachingSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCGetCurrentPrivateCoachingSession) Reset() {
	*x = CMsgClientToGCGetCurrentPrivateCoachingSession{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCGetCurrentPrivateCoachingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetCurrentPrivateCoachingSession) ProtoMessage() {}

func (x *CMsgClientToGCGetCurrentPrivateCoachingSession) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetCurrentPrivateCoachingSession.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetCurrentPrivateCoachingSession) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{20}
}

type CMsgClientToGCGetCurrentPrivateCoachingSessionResponse struct {
	state          protoimpl.MessageState                                            `protogen:"open.v1"`
	Result         *CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse,def=0" json:"result,omitempty"`
	CurrentSession *CMsgPrivateCoachingSession                                       `protobuf:"bytes,2,opt,name=current_session,json=currentSession" json:"current_session,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CMsgClientToGCGetCurrentPrivateCoachingSessionResponse fields.
const (
	Default_CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_Result = CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_k_eInternalError
)

func (x *CMsgClientToGCGetCurrentPrivateCoachingSessionResponse) Reset() {
	*x = CMsgClientToGCGetCurrentPrivateCoachingSessionResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCGetCurrentPrivateCoachingSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetCurrentPrivateCoachingSessionResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetCurrentPrivateCoachingSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetCurrentPrivateCoachingSessionResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgClientToGCGetCurrentPrivateCoachingSessionResponse) GetResult() CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_Result
}

func (x *CMsgClientToGCGetCurrentPrivateCoachingSessionResponse) GetCurrentSession() *CMsgPrivateCoachingSession {
	if x != nil {
		return x.CurrentSession
	}
	return nil
}

type CMsgGCToClientPrivateCoachingSessionUpdated struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	CoachingSession *CMsgPrivateCoachingSession `protobuf:"bytes,1,opt,name=coaching_session,json=coachingSession" json:"coaching_session,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgGCToClientPrivateCoachingSessionUpdated) Reset() {
	*x = CMsgGCToClientPrivateCoachingSessionUpdated{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCToClientPrivateCoachingSessionUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientPrivateCoachingSessionUpdated) ProtoMessage() {}

func (x *CMsgGCToClientPrivateCoachingSessionUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientPrivateCoachingSessionUpdated.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientPrivateCoachingSessionUpdated) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgGCToClientPrivateCoachingSessionUpdated) GetCoachingSession() *CMsgPrivateCoachingSession {
	if x != nil {
		return x.CoachingSession
	}
	return nil
}

type CMsgClientToGCSubmitPrivateCoachingSessionRating struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CoachingSessionId *uint64                `protobuf:"varint,1,opt,name=coaching_session_id,json=coachingSessionId" json:"coaching_session_id,omitempty"`
	SessionRating     *ECoachTeammateRating  `protobuf:"varint,2,opt,name=session_rating,json=sessionRating,enum=protocol.ECoachTeammateRating,def=0" json:"session_rating,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for CMsgClientToGCSubmitPrivateCoachingSessionRating fields.
const (
	Default_CMsgClientToGCSubmitPrivateCoachingSessionRating_SessionRating = ECoachTeammateRating_k_ECoachTeammateRating_None
)

func (x *CMsgClientToGCSubmitPrivateCoachingSessionRating) Reset() {
	*x = CMsgClientToGCSubmitPrivateCoachingSessionRating{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCSubmitPrivateCoachingSessionRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSubmitPrivateCoachingSessionRating) ProtoMessage() {}

func (x *CMsgClientToGCSubmitPrivateCoachingSessionRating) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSubmitPrivateCoachingSessionRating.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSubmitPrivateCoachingSessionRating) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgClientToGCSubmitPrivateCoachingSessionRating) GetCoachingSessionId() uint64 {
	if x != nil && x.CoachingSessionId != nil {
		return *x.CoachingSessionId
	}
	return 0
}

func (x *CMsgClientToGCSubmitPrivateCoachingSessionRating) GetSessionRating() ECoachTeammateRating {
	if x != nil && x.SessionRating != nil {
		return *x.SessionRating
	}
	return Default_CMsgClientToGCSubmitPrivateCoachingSessionRating_SessionRating
}

type CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse struct {
	state         protoimpl.MessageState                                              `protogen:"open.v1"`
	Result        *CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse,def=0" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse fields.
const (
	Default_CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_Result = CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_k_eInternalError
)

func (x *CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse) Reset() {
	*x = CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse) ProtoMessage() {}

func (x *CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse) GetResult() CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_Result
}

type CMsgClientToGCGetAvailablePrivateCoachingSessions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *uint32                `protobuf:"varint,1,opt,name=language" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessions) Reset() {
	*x = CMsgClientToGCGetAvailablePrivateCoachingSessions{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetAvailablePrivateCoachingSessions) ProtoMessage() {}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessions) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetAvailablePrivateCoachingSessions.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetAvailablePrivateCoachingSessions) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessions) GetLanguage() uint32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

type CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse struct {
	state                 protoimpl.MessageState                                               `protogen:"open.v1"`
	Result                *CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse,def=0" json:"result,omitempty"`
	AvailableSessionsList *CMsgAvailablePrivateCoachingSessionList                             `protobuf:"bytes,2,opt,name=available_sessions_list,json=availableSessionsList" json:"available_sessions_list,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

// Default values for CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse fields.
const (
	Default_CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_Result = CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_k_eInternalError
)

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse) Reset() {
	*x = CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse) GetResult() CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_Result
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse) GetAvailableSessionsList() *CMsgAvailablePrivateCoachingSessionList {
	if x != nil {
		return x.AvailableSessionsList
	}
	return nil
}

type CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary) Reset() {
	*x = CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary) ProtoMessage() {}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{27}
}

type CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse struct {
	state                  protoimpl.MessageState                                                      `protogen:"open.v1"`
	Result                 *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse,def=0" json:"result,omitempty"`
	CoachingSessionSummary *CMsgAvailablePrivateCoachingSessionSummary                                 `protobuf:"bytes,2,opt,name=coaching_session_summary,json=coachingSessionSummary" json:"coaching_session_summary,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

// Default values for CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse fields.
const (
	Default_CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_Result = CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_k_eInternalError
)

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse) Reset() {
	*x = CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse) GetResult() CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_Result
}

func (x *CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse) GetCoachingSessionSummary() *CMsgAvailablePrivateCoachingSessionSummary {
	if x != nil {
		return x.CoachingSessionSummary
	}
	return nil
}

type CMsgClientToGCJoinPrivateCoachingSessionLobby struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientToGCJoinPrivateCoachingSessionLobby) Reset() {
	*x = CMsgClientToGCJoinPrivateCoachingSessionLobby{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCJoinPrivateCoachingSessionLobby) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCJoinPrivateCoachingSessionLobby) ProtoMessage() {}

func (x *CMsgClientToGCJoinPrivateCoachingSessionLobby) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCJoinPrivateCoachingSessionLobby.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCJoinPrivateCoachingSessionLobby) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{29}
}

type CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse struct {
	state         protoimpl.MessageState                                           `protogen:"open.v1"`
	Result        *CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse,def=0" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse fields.
const (
	Default_CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_Result = CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_k_eInternalError
)

func (x *CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse) Reset() {
	*x = CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse) ProtoMessage() {}

func (x *CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse) GetResult() CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_Result
}

type CMsgClientToGCCoachFriend struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TargetAccountId *uint32                `protobuf:"varint,1,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgClientToGCCoachFriend) Reset() {
	*x = CMsgClientToGCCoachFriend{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCCoachFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCoachFriend) ProtoMessage() {}

func (x *CMsgClientToGCCoachFriend) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCoachFriend.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCoachFriend) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{31}
}

func (x *CMsgClientToGCCoachFriend) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

type CMsgClientToGCCoachFriendResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Result        *CMsgClientToGCCoachFriendResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCCoachFriendResponse_EResponse,def=0" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCCoachFriendResponse fields.
const (
	Default_CMsgClientToGCCoachFriendResponse_Result = CMsgClientToGCCoachFriendResponse_k_eInternalError
)

func (x *CMsgClientToGCCoachFriendResponse) Reset() {
	*x = CMsgClientToGCCoachFriendResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCCoachFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCoachFriendResponse) ProtoMessage() {}

func (x *CMsgClientToGCCoachFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCoachFriendResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCoachFriendResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgClientToGCCoachFriendResponse) GetResult() CMsgClientToGCCoachFriendResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCCoachFriendResponse_Result
}

type CMsgClientToGCRespondToCoachFriendRequest struct {
	state          protoimpl.MessageState         `protogen:"open.v1"`
	CoachAccountId *uint32                        `protobuf:"varint,1,opt,name=coach_account_id,json=coachAccountId" json:"coach_account_id,omitempty"`
	Response       *ELobbyMemberCoachRequestState `protobuf:"varint,2,opt,name=response,enum=protocol.ELobbyMemberCoachRequestState,def=0" json:"response,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CMsgClientToGCRespondToCoachFriendRequest fields.
const (
	Default_CMsgClientToGCRespondToCoachFriendRequest_Response = ELobbyMemberCoachRequestState_k_eLobbyMemberCoachRequestState_None
)

func (x *CMsgClientToGCRespondToCoachFriendRequest) Reset() {
	*x = CMsgClientToGCRespondToCoachFriendRequest{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCRespondToCoachFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRespondToCoachFriendRequest) ProtoMessage() {}

func (x *CMsgClientToGCRespondToCoachFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRespondToCoachFriendRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRespondToCoachFriendRequest) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgClientToGCRespondToCoachFriendRequest) GetCoachAccountId() uint32 {
	if x != nil && x.CoachAccountId != nil {
		return *x.CoachAccountId
	}
	return 0
}

func (x *CMsgClientToGCRespondToCoachFriendRequest) GetResponse() ELobbyMemberCoachRequestState {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCRespondToCoachFriendRequest_Response
}

type CMsgClientToGCRespondToCoachFriendRequestResponse struct {
	state         protoimpl.MessageState                                       `protogen:"open.v1"`
	Result        *CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse,def=0" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientToGCRespondToCoachFriendRequestResponse fields.
const (
	Default_CMsgClientToGCRespondToCoachFriendRequestResponse_Result = CMsgClientToGCRespondToCoachFriendRequestResponse_k_eInternalError
)

func (x *CMsgClientToGCRespondToCoachFriendRequestResponse) Reset() {
	*x = CMsgClientToGCRespondToCoachFriendRequestResponse{}
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientToGCRespondToCoachFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRespondToCoachFriendRequestResponse) ProtoMessage() {}

func (x *CMsgClientToGCRespondToCoachFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_coaching_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRespondToCoachFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRespondToCoachFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_coaching_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgClientToGCRespondToCoachFriendRequestResponse) GetResult() CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCRespondToCoachFriendRequestResponse_Result
}

var File_dota_gcmessages_client_coaching_proto protoreflect.FileDescriptor

var file_dota_gcmessages_client_coaching_proto_rawDesc = string([]byte{
	0x0a, 0x25, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x1a, 0x17, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x64, 0x6f, 0x74, 0x61,
	0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2,
	0x02, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x55, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x3a, 0x17, 0x6b, 0x5f, 0x45, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x0c, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x65, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x10, 0x74, 0x65, 0x61, 0x6d, 0x6d,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x6f, 0x0a, 0x15, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x1b, 0x6b, 0x5f, 0x45, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x52, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xd8, 0x04, 0x0a, 0x1a,
	0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x1b, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x18, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x16, 0x63, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x3a, 0x26, 0x6b, 0x5f, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x14, 0x63, 0x6f, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x53, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x07, 0x52, 0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x07, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x9f, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x1f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x76, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x69,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x22, 0xda, 0x01, 0x0a, 0x23, 0x43, 0x4d, 0x73,
	0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x4f, 0x0a, 0x10, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0f, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x62, 0x0a, 0x17, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x15,
	0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x6d, 0x0a, 0x1b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x62, 0x0a, 0x2a, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x34,
	0x0a, 0x16, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14,
	0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22,
	0xb9, 0x02, 0x0a, 0x2f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0c, 0x63, 0x6f, 0x61, 0x63, 0x68,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f,
	0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f,
	0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x22, 0x42, 0x0a, 0x25, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22,
	0xb1, 0x02, 0x0a, 0x2d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f,
	0x0a, 0x0b, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x0a, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22,
	0x52, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x10, 0x03, 0x22, 0xdb, 0x01, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f,
	0x61, 0x63, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x45, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x3a, 0x1b, 0x6b, 0x5f, 0x45, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65,
	0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x4e, 0x6f, 0x6e,
	0x65, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0xc2, 0x03, 0x0a, 0x2f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54,
	0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x9f, 0x02, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54,
	0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x10, 0x04, 0x12, 0x17,
	0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x56, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x06, 0x12, 0x17,
	0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x49, 0x6e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x08, 0x12,
	0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x4f,
	0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x09, 0x12, 0x1f, 0x0a, 0x1b,
	0x6b, 0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x53, 0x61, 0x6d, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x73, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x10, 0x0a, 0x12, 0x17, 0x0a,
	0x13, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x45, 0x6c, 0x69, 0x67,
	0x69, 0x62, 0x6c, 0x65, 0x10, 0x0b, 0x22, 0x6c, 0x0a, 0x29, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61,
	0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0a, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x22, 0x49, 0x0a, 0x2b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22,
	0xb2, 0x04, 0x0a, 0x33, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x63, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x6f, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x02, 0x0a, 0x09,
	0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03,
	0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04,
	0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x65,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x6f,
	0x4c, 0x6f, 0x77, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x54, 0x79, 0x70, 0x65, 0x10, 0x07, 0x12, 0x18,
	0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x4c,
	0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x10,
	0x09, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x42, 0x61, 0x6e, 0x10, 0x0b, 0x12, 0x13,
	0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x42, 0x61,
	0x6e, 0x10, 0x0c, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x61, 0x6e, 0x10, 0x0d, 0x22, 0x5c, 0x0a, 0x2a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x84, 0x06, 0x0a, 0x32, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x63,
	0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x6f, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8a, 0x04, 0x0a,
	0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10,
	0x04, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x41,
	0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x10, 0x06,
	0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x48, 0x61,
	0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x10, 0x08, 0x12, 0x16,
	0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0a, 0x12,
	0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x49, 0x73, 0x4c, 0x61, 0x6e, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x73, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x10, 0x0d, 0x12,
	0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x0e, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x10, 0x0f, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f,
	0x4d, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x65, 0x73, 0x10, 0x10, 0x12, 0x15, 0x0a,
	0x11, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x57, 0x61, 0x73, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x10, 0x11, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x6f,
	0x4c, 0x6f, 0x77, 0x10, 0x12, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x52, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x74, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x10, 0x13, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x52, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x10,
	0x14, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x61, 0x6e,
	0x6b, 0x54, 0x6f, 0x6f, 0x4c, 0x6f, 0x77, 0x10, 0x15, 0x22, 0x2b, 0x0a, 0x29, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xaf, 0x02, 0x0a, 0x31, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x88, 0x01,
	0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x4c, 0x65, 0x66, 0x74, 0x10, 0x06, 0x22, 0x30, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe1, 0x02, 0x0a, 0x36, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4d, 0x0a, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x09, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x22, 0x7e,
	0x0a, 0x2b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4f, 0x0a,
	0x10, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63,
	0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc6,
	0x01, 0x0a, 0x30, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61,
	0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x1b, 0x6b, 0x5f, 0x45,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xad, 0x03, 0x0a, 0x38, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xf8, 0x01, 0x0a,
	0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10,
	0x04, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x4e,
	0x6f, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f,
	0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x10,
	0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x10,
	0x0a, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x0b, 0x22, 0x4f, 0x0a, 0x31, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x83, 0x03, 0x0a, 0x39, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x69, 0x0a, 0x17, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x09, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x22, 0x3a,
	0x0a, 0x38, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x96, 0x03, 0x0a, 0x40, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x54, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x6e, 0x0a, 0x18, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x16, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22,
	0x62, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x10, 0x04, 0x22, 0x2f, 0x0a, 0x2d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x22, 0xda, 0x04, 0x0a, 0x35, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xab, 0x03, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f,
	0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x4e,
	0x6f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x4c, 0x65, 0x66, 0x74, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x74,
	0x41, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x4e,
	0x6f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x10,
	0x0a, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x41,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x49, 0x73, 0x4c, 0x61, 0x6e, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f,
	0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x73, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x10, 0x0d,
	0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x10, 0x0f, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x10,
	0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x65, 0x73, 0x10, 0x11, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x57, 0x61, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x12, 0x12, 0x11,
	0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10,
	0x13, 0x22, 0x47, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xcf, 0x04, 0x0a, 0x21, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xc8, 0x03, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42,
	0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x10,
	0x05, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x42, 0x6f, 0x74, 0x68, 0x53, 0x69, 0x64, 0x65, 0x73,
	0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x49, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x10, 0x09, 0x12, 0x14,
	0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x41, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x49, 0x73, 0x4c, 0x61, 0x6e, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0c,
	0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x0d, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x41, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x4d,
	0x61, 0x6e, 0x79, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x65, 0x73, 0x10, 0x0f, 0x12, 0x19, 0x0a, 0x15,
	0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x54, 0x65, 0x61, 0x6d, 0x73, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x49, 0x73, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x10, 0x11, 0x12, 0x15, 0x0a,
	0x11, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x57, 0x61, 0x73, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x10, 0x12, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x13, 0x22, 0xc0, 0x01, 0x0a,
	0x29, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f,
	0x61, 0x63, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x69, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x45, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x3a,
	0x24, 0x6b, 0x5f, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xc7, 0x03, 0x0a, 0x31, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f,
	0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f,
	0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b,
	0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x5f, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10,
	0x05, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x6b,
	0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x08, 0x12, 0x17, 0x0a,
	0x13, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x54, 0x65, 0x61, 0x6d, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x0b,
	0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x0c, 0x2a, 0xa5, 0x01, 0x0a, 0x14, 0x45, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65,
	0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x4e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54,
	0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x12, 0x22, 0x0a,
	0x1e, 0x6b, 0x5f, 0x45, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x62, 0x75, 0x73, 0x69, 0x76, 0x65, 0x10,
	0x03, 0x2a, 0xb9, 0x02, 0x0a, 0x1c, 0x45, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x2a, 0x0a, 0x26, 0x6b, 0x5f, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x34,
	0x0a, 0x30, 0x6b, 0x5f, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x10, 0x01, 0x12, 0x30, 0x0a, 0x2c, 0x6b, 0x5f, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x10, 0x02, 0x12, 0x2b, 0x0a, 0x27, 0x6b, 0x5f, 0x65, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x10, 0x03, 0x12, 0x2a, 0x0a, 0x26, 0x6b, 0x5f, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0x04, 0x12,
	0x2c, 0x0a, 0x28, 0x6b, 0x5f, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x10, 0x05, 0x2a, 0xba, 0x01,
	0x0a, 0x21, 0x45, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x31, 0x0a, 0x2d, 0x6b, 0x5f, 0x45, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x10, 0x02, 0x12, 0x33, 0x0a, 0x2f, 0x6b, 0x5f, 0x45, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x4c, 0x65, 0x66,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x2a, 0x71, 0x0a, 0x15, 0x45, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x2e, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x45,
	0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x10, 0x02, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
})

var (
	file_dota_gcmessages_client_coaching_proto_rawDescOnce sync.Once
	file_dota_gcmessages_client_coaching_proto_rawDescData []byte
)

func file_dota_gcmessages_client_coaching_proto_rawDescGZIP() []byte {
	file_dota_gcmessages_client_coaching_proto_rawDescOnce.Do(func() {
		file_dota_gcmessages_client_coaching_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dota_gcmessages_client_coaching_proto_rawDesc), len(file_dota_gcmessages_client_coaching_proto_rawDesc)))
	})
	return file_dota_gcmessages_client_coaching_proto_rawDescData
}

var file_dota_gcmessages_client_coaching_proto_enumTypes = make([]protoimpl.EnumInfo, 17)
var file_dota_gcmessages_client_coaching_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_dota_gcmessages_client_coaching_proto_goTypes = []any{
	(ECoachTeammateRating)(0),                                                       // 0: protocol.ECoachTeammateRating
	(EPrivateCoachingSessionState)(0),                                               // 1: protocol.EPrivateCoachingSessionState
	(EPrivateCoachingSessionMemberFlag)(0),                                          // 2: protocol.EPrivateCoachingSessionMemberFlag
	(EPlayerCoachMatchFlag)(0),                                                      // 3: protocol.EPlayerCoachMatchFlag
	(CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse)(0),                  // 4: protocol.CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse
	(CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse)(0),                    // 5: protocol.CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse
	(CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse)(0),                  // 6: protocol.CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse
	(CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse)(0),              // 7: protocol.CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse
	(CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse)(0),               // 8: protocol.CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse
	(CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse)(0),                // 9: protocol.CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse
	(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse)(0),           // 10: protocol.CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse
	(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse)(0),         // 11: protocol.CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse
	(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse)(0),        // 12: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse
	(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse)(0), // 13: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse
	(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse)(0),            // 14: protocol.CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse
	(CMsgClientToGCCoachFriendResponse_EResponse)(0),                                // 15: protocol.CMsgClientToGCCoachFriendResponse.EResponse
	(CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse)(0),                // 16: protocol.CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse
	(*CMsgPlayerCoachMatch)(nil),                                                    // 17: protocol.CMsgPlayerCoachMatch
	(*CMsgPrivateCoachingSessionMember)(nil),                                        // 18: protocol.CMsgPrivateCoachingSessionMember
	(*CMsgPrivateCoachingSession)(nil),                                              // 19: protocol.CMsgPrivateCoachingSession
	(*CMsgPrivateCoachingSessionStatus)(nil),                                        // 20: protocol.CMsgPrivateCoachingSessionStatus
	(*CMsgAvailablePrivateCoachingSession)(nil),                                     // 21: protocol.CMsgAvailablePrivateCoachingSession
	(*CMsgAvailablePrivateCoachingSessionList)(nil),                                 // 22: protocol.CMsgAvailablePrivateCoachingSessionList
	(*CMsgAvailablePrivateCoachingSessionSummary)(nil),                              // 23: protocol.CMsgAvailablePrivateCoachingSessionSummary
	(*CMsgClientToGCRequestPlayerCoachMatches)(nil),                                 // 24: protocol.CMsgClientToGCRequestPlayerCoachMatches
	(*CMsgClientToGCRequestPlayerCoachMatchesResponse)(nil),                         // 25: protocol.CMsgClientToGCRequestPlayerCoachMatchesResponse
	(*CMsgClientToGCRequestPlayerCoachMatch)(nil),                                   // 26: protocol.CMsgClientToGCRequestPlayerCoachMatch
	(*CMsgClientToGCRequestPlayerCoachMatchResponse)(nil),                           // 27: protocol.CMsgClientToGCRequestPlayerCoachMatchResponse
	(*CMsgClientToGCSubmitCoachTeammateRating)(nil),                                 // 28: protocol.CMsgClientToGCSubmitCoachTeammateRating
	(*CMsgClientToGCSubmitCoachTeammateRatingResponse)(nil),                         // 29: protocol.CMsgClientToGCSubmitCoachTeammateRatingResponse
	(*CMsgGCToClientCoachTeammateRatingsChanged)(nil),                               // 30: protocol.CMsgGCToClientCoachTeammateRatingsChanged
	(*CMsgClientToGCRequestPrivateCoachingSession)(nil),                             // 31: protocol.CMsgClientToGCRequestPrivateCoachingSession
	(*CMsgClientToGCRequestPrivateCoachingSessionResponse)(nil),                     // 32: protocol.CMsgClientToGCRequestPrivateCoachingSessionResponse
	(*CMsgClientToGCAcceptPrivateCoachingSession)(nil),                              // 33: protocol.CMsgClientToGCAcceptPrivateCoachingSession
	(*CMsgClientToGCAcceptPrivateCoachingSessionResponse)(nil),                      // 34: protocol.CMsgClientToGCAcceptPrivateCoachingSessionResponse
	(*CMsgClientToGCLeavePrivateCoachingSession)(nil),                               // 35: protocol.CMsgClientToGCLeavePrivateCoachingSession
	(*CMsgClientToGCLeavePrivateCoachingSessionResponse)(nil),                       // 36: protocol.CMsgClientToGCLeavePrivateCoachingSessionResponse
	(*CMsgClientToGCGetCurrentPrivateCoachingSession)(nil),                          // 37: protocol.CMsgClientToGCGetCurrentPrivateCoachingSession
	(*CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)(nil),                  // 38: protocol.CMsgClientToGCGetCurrentPrivateCoachingSessionResponse
	(*CMsgGCToClientPrivateCoachingSessionUpdated)(nil),                             // 39: protocol.CMsgGCToClientPrivateCoachingSessionUpdated
	(*CMsgClientToGCSubmitPrivateCoachingSessionRating)(nil),                        // 40: protocol.CMsgClientToGCSubmitPrivateCoachingSessionRating
	(*CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)(nil),                // 41: protocol.CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse
	(*CMsgClientToGCGetAvailablePrivateCoachingSessions)(nil),                       // 42: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessions
	(*CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)(nil),               // 43: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse
	(*CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)(nil),                // 44: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary
	(*CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)(nil),        // 45: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse
	(*CMsgClientToGCJoinPrivateCoachingSessionLobby)(nil),                           // 46: protocol.CMsgClientToGCJoinPrivateCoachingSessionLobby
	(*CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)(nil),                   // 47: protocol.CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse
	(*CMsgClientToGCCoachFriend)(nil),                                               // 48: protocol.CMsgClientToGCCoachFriend
	(*CMsgClientToGCCoachFriendResponse)(nil),                                       // 49: protocol.CMsgClientToGCCoachFriendResponse
	(*CMsgClientToGCRespondToCoachFriendRequest)(nil),                               // 50: protocol.CMsgClientToGCRespondToCoachFriendRequest
	(*CMsgClientToGCRespondToCoachFriendRequestResponse)(nil),                       // 51: protocol.CMsgClientToGCRespondToCoachFriendRequestResponse
	(EMatchOutcome)(0),                 // 52: protocol.EMatchOutcome
	(ELobbyMemberCoachRequestState)(0), // 53: protocol.ELobbyMemberCoachRequestState
}
var file_dota_gcmessages_client_coaching_proto_depIdxs = []int32{
	52, // 0: protocol.CMsgPlayerCoachMatch.match_outcome:type_name -> protocol.EMatchOutcome
	0,  // 1: protocol.CMsgPlayerCoachMatch.teammate_ratings:type_name -> protocol.ECoachTeammateRating
	0,  // 2: protocol.CMsgPrivateCoachingSessionMember.member_session_rating:type_name -> protocol.ECoachTeammateRating
	1,  // 3: protocol.CMsgPrivateCoachingSession.coaching_session_state:type_name -> protocol.EPrivateCoachingSessionState
	18, // 4: protocol.CMsgPrivateCoachingSession.session_members:type_name -> protocol.CMsgPrivateCoachingSessionMember
	19, // 5: protocol.CMsgAvailablePrivateCoachingSession.coaching_session:type_name -> protocol.CMsgPrivateCoachingSession
	20, // 6: protocol.CMsgAvailablePrivateCoachingSession.coaching_session_status:type_name -> protocol.CMsgPrivateCoachingSessionStatus
	21, // 7: protocol.CMsgAvailablePrivateCoachingSessionList.available_coaching_sessions:type_name -> protocol.CMsgAvailablePrivateCoachingSession
	4,  // 8: protocol.CMsgClientToGCRequestPlayerCoachMatchesResponse.result:type_name -> protocol.CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse
	17, // 9: protocol.CMsgClientToGCRequestPlayerCoachMatchesResponse.coach_matches:type_name -> protocol.CMsgPlayerCoachMatch
	5,  // 10: protocol.CMsgClientToGCRequestPlayerCoachMatchResponse.result:type_name -> protocol.CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse
	17, // 11: protocol.CMsgClientToGCRequestPlayerCoachMatchResponse.coach_match:type_name -> protocol.CMsgPlayerCoachMatch
	0,  // 12: protocol.CMsgClientToGCSubmitCoachTeammateRating.rating:type_name -> protocol.ECoachTeammateRating
	6,  // 13: protocol.CMsgClientToGCSubmitCoachTeammateRatingResponse.result:type_name -> protocol.CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse
	17, // 14: protocol.CMsgGCToClientCoachTeammateRatingsChanged.coach_match:type_name -> protocol.CMsgPlayerCoachMatch
	7,  // 15: protocol.CMsgClientToGCRequestPrivateCoachingSessionResponse.result:type_name -> protocol.CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse
	19, // 16: protocol.CMsgClientToGCRequestPrivateCoachingSessionResponse.coaching_session:type_name -> protocol.CMsgPrivateCoachingSession
	8,  // 17: protocol.CMsgClientToGCAcceptPrivateCoachingSessionResponse.result:type_name -> protocol.CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse
	19, // 18: protocol.CMsgClientToGCAcceptPrivateCoachingSessionResponse.coaching_session:type_name -> protocol.CMsgPrivateCoachingSession
	9,  // 19: protocol.CMsgClientToGCLeavePrivateCoachingSessionResponse.result:type_name -> protocol.CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse
	10, // 20: protocol.CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.result:type_name -> protocol.CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse
	19, // 21: protocol.CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.current_session:type_name -> protocol.CMsgPrivateCoachingSession
	19, // 22: protocol.CMsgGCToClientPrivateCoachingSessionUpdated.coaching_session:type_name -> protocol.CMsgPrivateCoachingSession
	0,  // 23: protocol.CMsgClientToGCSubmitPrivateCoachingSessionRating.session_rating:type_name -> protocol.ECoachTeammateRating
	11, // 24: protocol.CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.result:type_name -> protocol.CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse
	12, // 25: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.result:type_name -> protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse
	22, // 26: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.available_sessions_list:type_name -> protocol.CMsgAvailablePrivateCoachingSessionList
	13, // 27: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.result:type_name -> protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse
	23, // 28: protocol.CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.coaching_session_summary:type_name -> protocol.CMsgAvailablePrivateCoachingSessionSummary
	14, // 29: protocol.CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.result:type_name -> protocol.CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse
	15, // 30: protocol.CMsgClientToGCCoachFriendResponse.result:type_name -> protocol.CMsgClientToGCCoachFriendResponse.EResponse
	53, // 31: protocol.CMsgClientToGCRespondToCoachFriendRequest.response:type_name -> protocol.ELobbyMemberCoachRequestState
	16, // 32: protocol.CMsgClientToGCRespondToCoachFriendRequestResponse.result:type_name -> protocol.CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_dota_gcmessages_client_coaching_proto_init() }
func file_dota_gcmessages_client_coaching_proto_init() {
	if File_dota_gcmessages_client_coaching_proto != nil {
		return
	}
	file_dota_shared_enums_proto_init()
	file_dota_gcmessages_common_lobby_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dota_gcmessages_client_coaching_proto_rawDesc), len(file_dota_gcmessages_client_coaching_proto_rawDesc)),
			NumEnums:      17,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dota_gcmessages_client_coaching_proto_goTypes,
		DependencyIndexes: file_dota_gcmessages_client_coaching_proto_depIdxs,
		EnumInfos:         file_dota_gcmessages_client_coaching_proto_enumTypes,
		MessageInfos:      file_dota_gcmessages_client_coaching_proto_msgTypes,
	}.Build()
	File_dota_gcmessages_client_coaching_proto = out.File
	file_dota_gcmessages_client_coaching_proto_goTypes = nil
	file_dota_gcmessages_client_coaching_proto_depIdxs = nil
}
